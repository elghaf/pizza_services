{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayoub\\\\OneDrive\\\\Desktop\\\\eagleAI\\\\pizza_store_detection\\\\services\\\\frontend\\\\src\\\\components\\\\VideoProcessor.js\",\n  _s = $RefreshSig$();\n/**\n * VideoProcessor - Main component for video processing functionality\n * Split into smaller, focused components for better maintainability\n */\n\nimport React, { useState, useRef } from 'react';\nimport { toast } from 'react-toastify';\nimport VideoUploader from './VideoProcessor/VideoUploader';\nimport ProcessingControls from './VideoProcessor/ProcessingControls';\nimport VideoDisplay from './VideoProcessor/VideoDisplay';\nimport DetectionStats from './VideoProcessor/DetectionStats';\nimport ViolationAlerts from './VideoProcessor/ViolationAlerts';\nimport ViolationControls from './VideoProcessor/ViolationControls';\nimport ViolationHistory from './VideoProcessor/ViolationHistory';\nimport ViolationStatusOverlay from './VideoProcessor/ViolationStatusOverlay';\nimport useVideoProcessing from './VideoProcessor/hooks/useVideoProcessing';\nimport useWebSocket from './VideoProcessor/hooks/useWebSocket';\nimport useDetectionDrawing from './VideoProcessor/hooks/useDetectionDrawing';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoProcessor = ({\n  onSessionUpdate,\n  onDetectionUpdate,\n  onViolationUpdate,\n  currentSession\n}) => {\n  _s();\n  // State management\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [processingProgress, setProcessingProgress] = useState(0);\n  const [currentFrame, setCurrentFrame] = useState(null);\n  const [detections, setDetections] = useState([]);\n  const [violations, setViolations] = useState([]);\n  const [fps, setFps] = useState(10);\n  const [roiZones, setRoiZones] = useState([]);\n  const [showROIManager, setShowROIManager] = useState(false);\n  const [frameSize, setFrameSize] = useState({\n    width: 640,\n    height: 480\n  });\n  const [drawingEnabled, setDrawingEnabled] = useState(true);\n  const [isFullScreen, setIsFullScreen] = useState(false);\n\n  // Refs\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const fullScreenCanvasRef = useRef(null);\n  const wsRef = useRef(null);\n\n  // Custom hooks for functionality\n  const {\n    startProcessing,\n    stopProcessing\n  } = useVideoProcessing({\n    selectedFile,\n    fps,\n    setIsProcessing,\n    setProcessingProgress,\n    setDetections,\n    setViolations,\n    onSessionUpdate,\n    wsRef\n  });\n  const {\n    connectWebSocket\n  } = useWebSocket({\n    wsRef,\n    setCurrentFrame,\n    setDetections,\n    setViolations,\n    setIsProcessing,\n    setProcessingProgress,\n    onDetectionUpdate,\n    onViolationUpdate\n  });\n  const {\n    drawDetections\n  } = useDetectionDrawing({\n    videoRef,\n    canvasRef,\n    fullScreenCanvasRef\n  });\n\n  // Event handlers\n  const handleFileSelect = file => {\n    setSelectedFile(file);\n    toast.success(`Video selected: ${file.name}`);\n  };\n  const handleViolationDetected = violation => {\n    setViolations(prev => [...prev, violation]);\n    if (onViolationUpdate) {\n      onViolationUpdate(violation);\n    }\n    toast.error(`Violation detected: ${violation.description}`);\n  };\n  const handleStartProcessing = async () => {\n    if (!selectedFile) {\n      toast.error('Please select a video file first');\n      return;\n    }\n    await startProcessing();\n  };\n  const handleStopProcessing = async () => {\n    await stopProcessing();\n  };\n  const handleFpsChange = newFps => {\n    setFps(newFps);\n  };\n  const handleToggleROIManager = () => {\n    setShowROIManager(!showROIManager);\n  };\n  const handleZonesUpdate = zones => {\n    setRoiZones(zones);\n  };\n  const handleFrameLoad = () => {\n    const img = videoRef.current;\n    if (img) {\n      const rect = img.getBoundingClientRect();\n      setFrameSize({\n        width: img.naturalWidth || rect.width,\n        height: img.naturalHeight || rect.height\n      });\n      // Small delay to ensure image is fully rendered\n      setTimeout(() => drawDetections(detections), 50);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-processor\",\n    children: [/*#__PURE__*/_jsxDEV(VideoUploader, {\n      selectedFile: selectedFile,\n      onFileSelect: handleFileSelect,\n      isProcessing: isProcessing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProcessingControls, {\n      selectedFile: selectedFile,\n      isProcessing: isProcessing,\n      fps: fps,\n      processingProgress: processingProgress,\n      onStartProcessing: handleStartProcessing,\n      onStopProcessing: handleStopProcessing,\n      onFpsChange: handleFpsChange,\n      onToggleROIManager: handleToggleROIManager,\n      showROIManager: showROIManager,\n      roiZones: roiZones\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoDisplay, {\n      currentFrame: currentFrame,\n      detections: detections,\n      violations: violations,\n      roiZones: roiZones,\n      frameSize: frameSize,\n      showROIManager: showROIManager,\n      isProcessing: isProcessing,\n      videoRef: videoRef,\n      canvasRef: canvasRef,\n      fullScreenCanvasRef: fullScreenCanvasRef,\n      onFrameLoad: handleFrameLoad,\n      onZonesUpdate: handleZonesUpdate,\n      onViolationDetected: handleViolationDetected,\n      drawDetections: drawDetections\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), detections.length > 0 && /*#__PURE__*/_jsxDEV(DetectionStats, {\n      detections: detections,\n      videoRef: videoRef,\n      canvasRef: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this), violations.length > 0 && /*#__PURE__*/_jsxDEV(ViolationAlerts, {\n      violations: violations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this), !isProcessing && roiZones.length > 0 && /*#__PURE__*/_jsxDEV(ViolationControls, {\n      detections: detections,\n      zones: roiZones,\n      frameWidth: frameSize.width,\n      frameHeight: frameSize.height,\n      onViolationDetected: handleViolationDetected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this), !isProcessing && violations.length > 0 && /*#__PURE__*/_jsxDEV(ViolationHistory, {\n      violations: violations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoProcessor, \"vHR/sjs7oz+e6F92Vwn1L79p884=\", false, function () {\n  return [useVideoProcessing, useWebSocket, useDetectionDrawing];\n});\n_c = VideoProcessor;\nexport default VideoProcessor;\nvar _c;\n$RefreshReg$(_c, \"VideoProcessor\");","map":{"version":3,"names":["React","useState","useRef","toast","VideoUploader","ProcessingControls","VideoDisplay","DetectionStats","ViolationAlerts","ViolationControls","ViolationHistory","ViolationStatusOverlay","useVideoProcessing","useWebSocket","useDetectionDrawing","jsxDEV","_jsxDEV","VideoProcessor","onSessionUpdate","onDetectionUpdate","onViolationUpdate","currentSession","_s","selectedFile","setSelectedFile","isProcessing","setIsProcessing","processingProgress","setProcessingProgress","currentFrame","setCurrentFrame","detections","setDetections","violations","setViolations","fps","setFps","roiZones","setRoiZones","showROIManager","setShowROIManager","frameSize","setFrameSize","width","height","drawingEnabled","setDrawingEnabled","isFullScreen","setIsFullScreen","videoRef","canvasRef","fullScreenCanvasRef","wsRef","startProcessing","stopProcessing","connectWebSocket","drawDetections","handleFileSelect","file","success","name","handleViolationDetected","violation","prev","error","description","handleStartProcessing","handleStopProcessing","handleFpsChange","newFps","handleToggleROIManager","handleZonesUpdate","zones","handleFrameLoad","img","current","rect","getBoundingClientRect","naturalWidth","naturalHeight","setTimeout","className","children","onFileSelect","fileName","_jsxFileName","lineNumber","columnNumber","onStartProcessing","onStopProcessing","onFpsChange","onToggleROIManager","onFrameLoad","onZonesUpdate","onViolationDetected","length","frameWidth","frameHeight","_c","$RefreshReg$"],"sources":["C:/Users/ayoub/OneDrive/Desktop/eagleAI/pizza_store_detection/services/frontend/src/components/VideoProcessor.js"],"sourcesContent":["/**\n * VideoProcessor - Main component for video processing functionality\n * Split into smaller, focused components for better maintainability\n */\n\nimport React, { useState, useRef } from 'react';\nimport { toast } from 'react-toastify';\n\nimport VideoUploader from './VideoProcessor/VideoUploader';\nimport ProcessingControls from './VideoProcessor/ProcessingControls';\nimport VideoDisplay from './VideoProcessor/VideoDisplay';\nimport DetectionStats from './VideoProcessor/DetectionStats';\nimport ViolationAlerts from './VideoProcessor/ViolationAlerts';\nimport ViolationControls from './VideoProcessor/ViolationControls';\nimport ViolationHistory from './VideoProcessor/ViolationHistory';\nimport ViolationStatusOverlay from './VideoProcessor/ViolationStatusOverlay';\nimport useVideoProcessing from './VideoProcessor/hooks/useVideoProcessing';\nimport useWebSocket from './VideoProcessor/hooks/useWebSocket';\nimport useDetectionDrawing from './VideoProcessor/hooks/useDetectionDrawing';\n\nconst VideoProcessor = ({ onSessionUpdate, onDetectionUpdate, onViolationUpdate, currentSession }) => {\n  // State management\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [processingProgress, setProcessingProgress] = useState(0);\n  const [currentFrame, setCurrentFrame] = useState(null);\n  const [detections, setDetections] = useState([]);\n  const [violations, setViolations] = useState([]);\n  const [fps, setFps] = useState(10);\n  const [roiZones, setRoiZones] = useState([]);\n  const [showROIManager, setShowROIManager] = useState(false);\n  const [frameSize, setFrameSize] = useState({ width: 640, height: 480 });\n  const [drawingEnabled, setDrawingEnabled] = useState(true);\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  \n  // Refs\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const fullScreenCanvasRef = useRef(null);\n  const wsRef = useRef(null);\n\n  // Custom hooks for functionality\n  const { startProcessing, stopProcessing } = useVideoProcessing({\n    selectedFile,\n    fps,\n    setIsProcessing,\n    setProcessingProgress,\n    setDetections,\n    setViolations,\n    onSessionUpdate,\n    wsRef\n  });\n\n  const { connectWebSocket } = useWebSocket({\n    wsRef,\n    setCurrentFrame,\n    setDetections,\n    setViolations,\n    setIsProcessing,\n    setProcessingProgress,\n    onDetectionUpdate,\n    onViolationUpdate\n  });\n\n  const { drawDetections } = useDetectionDrawing({\n    videoRef,\n    canvasRef,\n    fullScreenCanvasRef\n  });\n\n  // Event handlers\n  const handleFileSelect = (file) => {\n    setSelectedFile(file);\n    toast.success(`Video selected: ${file.name}`);\n  };\n\n  const handleViolationDetected = (violation) => {\n    setViolations(prev => [...prev, violation]);\n    if (onViolationUpdate) {\n      onViolationUpdate(violation);\n    }\n    toast.error(`Violation detected: ${violation.description}`);\n  };\n\n  const handleStartProcessing = async () => {\n    if (!selectedFile) {\n      toast.error('Please select a video file first');\n      return;\n    }\n    await startProcessing();\n  };\n\n  const handleStopProcessing = async () => {\n    await stopProcessing();\n  };\n\n  const handleFpsChange = (newFps) => {\n    setFps(newFps);\n  };\n\n  const handleToggleROIManager = () => {\n    setShowROIManager(!showROIManager);\n  };\n\n  const handleZonesUpdate = (zones) => {\n    setRoiZones(zones);\n  };\n\n  const handleFrameLoad = () => {\n    const img = videoRef.current;\n    if (img) {\n      const rect = img.getBoundingClientRect();\n      setFrameSize({\n        width: img.naturalWidth || rect.width,\n        height: img.naturalHeight || rect.height\n      });\n      // Small delay to ensure image is fully rendered\n      setTimeout(() => drawDetections(detections), 50);\n    }\n  };\n\n  return (\n    <div className=\"video-processor\">\n      {/* Video Upload Section */}\n      <VideoUploader\n        selectedFile={selectedFile}\n        onFileSelect={handleFileSelect}\n        isProcessing={isProcessing}\n      />\n\n      {/* Processing Controls */}\n      <ProcessingControls\n        selectedFile={selectedFile}\n        isProcessing={isProcessing}\n        fps={fps}\n        processingProgress={processingProgress}\n        onStartProcessing={handleStartProcessing}\n        onStopProcessing={handleStopProcessing}\n        onFpsChange={handleFpsChange}\n        onToggleROIManager={handleToggleROIManager}\n        showROIManager={showROIManager}\n        roiZones={roiZones}\n      />\n\n      {/* Video Display */}\n      <VideoDisplay\n        currentFrame={currentFrame}\n        detections={detections}\n        violations={violations}\n        roiZones={roiZones}\n        frameSize={frameSize}\n        showROIManager={showROIManager}\n        isProcessing={isProcessing}\n        videoRef={videoRef}\n        canvasRef={canvasRef}\n        fullScreenCanvasRef={fullScreenCanvasRef}\n        onFrameLoad={handleFrameLoad}\n        onZonesUpdate={handleZonesUpdate}\n        onViolationDetected={handleViolationDetected}\n        drawDetections={drawDetections}\n      />\n\n      {/* Detection Statistics */}\n      {detections.length > 0 && (\n        <DetectionStats\n          detections={detections}\n          videoRef={videoRef}\n          canvasRef={canvasRef}\n        />\n      )}\n\n      {/* Violation Alerts */}\n      {violations.length > 0 && (\n        <ViolationAlerts violations={violations} />\n      )}\n\n      {/* Violation Detection Controls */}\n      {!isProcessing && roiZones.length > 0 && (\n        <ViolationControls\n          detections={detections}\n          zones={roiZones}\n          frameWidth={frameSize.width}\n          frameHeight={frameSize.height}\n          onViolationDetected={handleViolationDetected}\n        />\n      )}\n\n      {/* Violation History */}\n      {!isProcessing && violations.length > 0 && (\n        <ViolationHistory violations={violations} />\n      )}\n    </div>\n  );\n};\n\nexport default VideoProcessor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}