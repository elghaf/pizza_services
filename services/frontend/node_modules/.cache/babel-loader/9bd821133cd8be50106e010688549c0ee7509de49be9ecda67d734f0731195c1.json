{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayoub\\\\OneDrive\\\\Desktop\\\\eagleAI\\\\pizza_store_detection\\\\services\\\\frontend\\\\src\\\\components\\\\ROIZoneManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ROIZoneManager = ({\n  currentFrame,\n  onZonesUpdate,\n  existingZones = [],\n  isEnabled = true,\n  frameWidth = 640,\n  frameHeight = 480\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [zones, setZones] = useState(existingZones);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [currentZone, setCurrentZone] = useState(null);\n  const [selectedZoneType, setSelectedZoneType] = useState('sauce_area');\n  const [editingZone, setEditingZone] = useState(null);\n  const [showZones, setShowZones] = useState(true);\n\n  // New polygon drawing states\n  const [drawingMode, setDrawingMode] = useState('rectangle'); // 'rectangle' or 'polygon'\n  const [polygonPoints, setPolygonPoints] = useState([]);\n  const [previewPoint, setPreviewPoint] = useState(null);\n\n  // Zone types with professional configuration\n  const zoneTypes = {\n    sauce_area: {\n      name: 'Sauce Area',\n      color: '#FF6B35',\n      fillColor: 'rgba(255, 107, 53, 0.2)',\n      requiresScooper: true,\n      icon: '🍅',\n      description: 'Sauce dispensing and handling area',\n      preferredShape: 'polygon' // Sauce areas work better with polygons\n    },\n    cheese_area: {\n      name: 'Cheese Area',\n      color: '#FFD23F',\n      fillColor: 'rgba(255, 210, 63, 0.2)',\n      requiresScooper: true,\n      icon: '🧀',\n      description: 'Cheese container and handling area',\n      preferredShape: 'rectangle' // Cheese containers are usually rectangular\n    },\n    meat_area: {\n      name: 'Meat/Protein Area',\n      color: '#FF4757',\n      fillColor: 'rgba(255, 71, 87, 0.2)',\n      requiresScooper: true,\n      icon: '🥓',\n      description: 'Meat and protein ingredient area'\n    },\n    vegetable_area: {\n      name: 'Vegetable Area',\n      color: '#2ED573',\n      fillColor: 'rgba(46, 213, 115, 0.2)',\n      requiresScooper: true,\n      icon: '🥬',\n      description: 'Vegetable and fresh ingredient area'\n    },\n    prep_surface: {\n      name: 'Prep Surface',\n      color: '#5352ED',\n      fillColor: 'rgba(83, 82, 237, 0.2)',\n      requiresScooper: false,\n      icon: '🍕',\n      description: 'Pizza preparation surface (no scooper required)'\n    },\n    cleaning_area: {\n      name: 'Cleaning Area',\n      color: '#00D2D3',\n      fillColor: 'rgba(0, 210, 211, 0.2)',\n      requiresScooper: false,\n      icon: '🧽',\n      description: 'Cleaning and sanitization area'\n    }\n  };\n\n  // Function definitions (moved to top to avoid hoisting issues)\n  const findZoneAtPoint = (x, y) => {\n    // x, y are in natural coordinates, zones are stored in natural coordinates\n    return zones.find(zone => {\n      if (zone.points.length === 2) {\n        const [p1, p2] = zone.points;\n        const inZone = x >= Math.min(p1.x, p2.x) && x <= Math.max(p1.x, p2.x) && y >= Math.min(p1.y, p2.y) && y <= Math.max(p1.y, p2.y);\n        console.log(`🔍 Checking zone ${zone.name}:`, {\n          point: {\n            x,\n            y\n          },\n          zone: {\n            p1,\n            p2\n          },\n          inZone\n        });\n        return inZone;\n      }\n      return false;\n    });\n  };\n  const drawZones = (zonesToDraw = zones) => {\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      console.log('❌ No canvas reference');\n      return;\n    }\n    const ctx = canvas.getContext('2d');\n\n    // Get the background image to match its size\n    const backgroundImg = document.getElementById('roi-background-image');\n    let displayWidth, displayHeight, naturalWidth, naturalHeight;\n    if (backgroundImg) {\n      const rect = backgroundImg.getBoundingClientRect();\n      displayWidth = rect.width;\n      displayHeight = rect.height;\n      naturalWidth = backgroundImg.naturalWidth || frameWidth;\n      naturalHeight = backgroundImg.naturalHeight || frameHeight;\n      canvas.width = displayWidth;\n      canvas.height = displayHeight;\n      canvas.style.width = displayWidth + 'px';\n      canvas.style.height = displayHeight + 'px';\n    } else {\n      // Fallback to provided dimensions\n      displayWidth = frameWidth;\n      displayHeight = frameHeight;\n      naturalWidth = frameWidth;\n      naturalHeight = frameHeight;\n      canvas.width = displayWidth;\n      canvas.height = displayHeight;\n    }\n\n    // Calculate scaling factors from natural to display size\n    const scaleX = displayWidth / naturalWidth;\n    const scaleY = displayHeight / naturalHeight;\n    console.log('🎨 Drawing zones on canvas:', {\n      canvasSize: `${canvas.width}x${canvas.height}`,\n      frameSize: `${frameWidth}x${frameHeight}`,\n      naturalSize: `${naturalWidth}x${naturalHeight}`,\n      displaySize: `${displayWidth}x${displayHeight}`,\n      scale: `${scaleX.toFixed(3)}x${scaleY.toFixed(3)}`,\n      zones: zonesToDraw.length,\n      backgroundImg: !!backgroundImg\n    });\n\n    // Clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    if (!showZones) return;\n\n    // Draw each zone with proper coordinate scaling\n    zonesToDraw.forEach((zone, index) => {\n      const zoneConfig = zoneTypes[zone.type];\n      if (zone.shape === 'polygon' && zone.points.length >= 3) {\n        drawPolygonZone(ctx, zone, zoneConfig, scaleX, scaleY);\n      } else if (zone.points.length >= 2) {\n        drawRectangleZone(ctx, zone, zoneConfig, scaleX, scaleY);\n      }\n    });\n\n    // Draw current polygon being drawn\n    if (drawingMode === 'polygon' && polygonPoints.length > 0) {\n      drawPolygonPreview(ctx, polygonPoints, previewPoint, zoneTypes[selectedZoneType]);\n    }\n\n    // Draw current zone being drawn (rectangle mode)\n    if (drawingMode === 'rectangle' && currentZone && currentZone.points.length === 2) {\n      const zoneConfig = zoneTypes[currentZone.type];\n      const [p1, p2] = currentZone.points;\n      ctx.strokeStyle = zoneConfig.color;\n      ctx.lineWidth = 3;\n      ctx.setLineDash([10, 5]);\n      ctx.strokeRect(Math.min(p1.x, p2.x), Math.min(p1.y, p2.y), Math.abs(p2.x - p1.x), Math.abs(p2.y - p1.y));\n    }\n  };\n  const drawPolygonZone = (ctx, zone, zoneConfig, scaleX, scaleY) => {\n    const isPreviewZone = zone.isPreview === true;\n\n    // Scale points from natural to display coordinates (unless it's a preview)\n    const scaledPoints = zone.points.map(point => {\n      if (isPreviewZone) {\n        return point; // Already in display coordinates\n      } else {\n        return {\n          x: point.x * scaleX,\n          y: point.y * scaleY\n        };\n      }\n    });\n\n    // Draw polygon\n    ctx.save();\n    ctx.strokeStyle = zoneConfig.color;\n    ctx.fillStyle = zoneConfig.fillColor;\n    ctx.lineWidth = isPreviewZone ? 3 : 2;\n    ctx.setLineDash(isPreviewZone ? [5, 5] : []);\n    ctx.beginPath();\n    ctx.moveTo(scaledPoints[0].x, scaledPoints[0].y);\n    for (let i = 1; i < scaledPoints.length; i++) {\n      ctx.lineTo(scaledPoints[i].x, scaledPoints[i].y);\n    }\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n\n    // Draw points\n    scaledPoints.forEach((point, index) => {\n      ctx.beginPath();\n      ctx.arc(point.x, point.y, 4, 0, 2 * Math.PI);\n      ctx.fillStyle = zoneConfig.color;\n      ctx.fill();\n      ctx.strokeStyle = '#fff';\n      ctx.lineWidth = 1;\n      ctx.stroke();\n    });\n\n    // Draw zone label\n    const centerX = scaledPoints.reduce((sum, p) => sum + p.x, 0) / scaledPoints.length;\n    const centerY = scaledPoints.reduce((sum, p) => sum + p.y, 0) / scaledPoints.length;\n    ctx.fillStyle = '#fff';\n    ctx.font = 'bold 12px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText(`${zoneConfig.icon} ${zone.name}`, centerX, centerY);\n    ctx.restore();\n  };\n  const drawPolygonPreview = (ctx, points, previewPoint, zoneConfig) => {\n    if (points.length === 0) return;\n    ctx.save();\n    ctx.strokeStyle = zoneConfig.color;\n    ctx.lineWidth = 3;\n    ctx.setLineDash([5, 5]);\n\n    // Draw lines between points\n    ctx.beginPath();\n    ctx.moveTo(points[0].x, points[0].y);\n    for (let i = 1; i < points.length; i++) {\n      ctx.lineTo(points[i].x, points[i].y);\n    }\n\n    // Draw preview line to mouse\n    if (previewPoint) {\n      ctx.lineTo(previewPoint.x, previewPoint.y);\n    }\n    ctx.stroke();\n\n    // Draw points\n    points.forEach((point, index) => {\n      ctx.beginPath();\n      ctx.arc(point.x, point.y, 6, 0, 2 * Math.PI);\n      ctx.fillStyle = zoneConfig.color;\n      ctx.fill();\n      ctx.strokeStyle = '#fff';\n      ctx.lineWidth = 2;\n      ctx.stroke();\n\n      // Draw point number\n      ctx.fillStyle = '#fff';\n      ctx.font = '10px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText((index + 1).toString(), point.x, point.y + 3);\n    });\n    ctx.restore();\n  };\n  const drawRectangleZone = (ctx, zone, zoneConfig, scaleX, scaleY) => {\n    const [p1, p2] = zone.points;\n    const isPreviewZone = zone.isPreview === true;\n\n    // Scale coordinates from natural to display (unless it's a preview)\n    let x1, y1, x2, y2;\n    if (isPreviewZone) {\n      x1 = p1.x;\n      y1 = p1.y;\n      x2 = p2.x;\n      y2 = p2.y;\n    } else {\n      x1 = p1.x * scaleX;\n      y1 = p1.y * scaleY;\n      x2 = p2.x * scaleX;\n      y2 = p2.y * scaleY;\n    }\n    const width = Math.abs(x2 - x1);\n    const height = Math.abs(y2 - y1);\n    const startX = Math.min(x1, x2);\n    const startY = Math.min(y1, y2);\n\n    // Draw rectangle\n    ctx.save();\n    ctx.fillStyle = zoneConfig.fillColor;\n    ctx.fillRect(startX, startY, width, height);\n    ctx.strokeStyle = zoneConfig.color;\n    ctx.lineWidth = isPreviewZone ? 3 : 2;\n    ctx.setLineDash(isPreviewZone ? [10, 5] : []);\n    ctx.strokeRect(startX, startY, width, height);\n\n    // Draw zone label\n    const labelX = startX + width / 2;\n    const labelY = startY + height / 2;\n    ctx.fillStyle = '#fff';\n    ctx.font = 'bold 14px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText(`${zoneConfig.icon} ${zone.name || zoneConfig.name}`, labelX, labelY);\n\n    // Draw requirement text\n    const reqText = zone.requiresScooper ? 'Scooper Required' : 'No Scooper Required';\n    ctx.font = '12px Arial';\n    ctx.fillStyle = zone.requiresScooper ? '#FF4757' : '#2ED573';\n    ctx.fillText(reqText, labelX, labelY + 18);\n    ctx.restore();\n  };\n  useEffect(() => {\n    if (onZonesUpdate) {\n      onZonesUpdate(zones);\n    }\n  }, [zones, onZonesUpdate]);\n  useEffect(() => {\n    console.log('🎯 ROI Zone Manager useEffect triggered:', {\n      currentFrame: !!currentFrame,\n      currentFrameType: typeof currentFrame,\n      currentFrameLength: (currentFrame === null || currentFrame === void 0 ? void 0 : currentFrame.length) || 0,\n      frameSize: `${frameWidth}x${frameHeight}`,\n      zones: zones.length,\n      showZones\n    });\n    if (currentFrame) {\n      console.log('✅ ROI Manager has frame data - length:', currentFrame.length);\n      console.log('🔍 Frame data preview:', currentFrame.substring(0, 50) + '...');\n    } else {\n      console.log('❌ ROI Manager - No frame data received');\n    }\n    drawZones();\n  }, [zones, currentFrame, showZones, frameWidth, frameHeight]);\n  const getCanvasCoordinates = event => {\n    const canvas = canvasRef.current;\n    if (!canvas) return {\n      x: 0,\n      y: 0\n    };\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n\n    // Get display coordinates\n    const displayCoords = {\n      x: (event.clientX - rect.left) * scaleX,\n      y: (event.clientY - rect.top) * scaleY\n    };\n\n    // Convert to natural frame coordinates for storage\n    const backgroundImg = document.getElementById('roi-background-image');\n    let naturalCoords = displayCoords;\n    if (backgroundImg) {\n      const naturalWidth = backgroundImg.naturalWidth || frameWidth;\n      const naturalHeight = backgroundImg.naturalHeight || frameHeight;\n      const displayWidth = canvas.width;\n      const displayHeight = canvas.height;\n      const naturalScaleX = naturalWidth / displayWidth;\n      const naturalScaleY = naturalHeight / displayHeight;\n      naturalCoords = {\n        x: displayCoords.x * naturalScaleX,\n        y: displayCoords.y * naturalScaleY\n      };\n    }\n    console.log('🖱️ Mouse coordinates:', {\n      client: {\n        x: event.clientX,\n        y: event.clientY\n      },\n      display: displayCoords,\n      natural: naturalCoords,\n      canvas: {\n        width: canvas.width,\n        height: canvas.height\n      },\n      frame: {\n        width: frameWidth,\n        height: frameHeight\n      }\n    });\n    return naturalCoords;\n  };\n  const handleMouseDown = event => {\n    if (!isEnabled) {\n      console.log('🚫 Drawing disabled');\n      return;\n    }\n    console.log('🖱️ Mouse down event triggered');\n    event.preventDefault();\n\n    // Get both natural and display coordinates\n    const naturalCoords = getCanvasCoordinates(event); // This returns natural coordinates\n\n    // Also get display coordinates for drawing preview\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    const displayCoords = {\n      x: (event.clientX - rect.left) * scaleX,\n      y: (event.clientY - rect.top) * scaleY\n    };\n\n    // Check if clicking on existing zone for editing (use natural coordinates)\n    const clickedZone = findZoneAtPoint(naturalCoords.x, naturalCoords.y);\n    if (clickedZone) {\n      console.log('✏️ Editing existing zone:', clickedZone.name);\n      setEditingZone(clickedZone);\n      return;\n    }\n    if (drawingMode === 'polygon') {\n      handlePolygonClick(displayCoords, naturalCoords);\n    } else {\n      handleRectangleStart(displayCoords, naturalCoords);\n    }\n  };\n  const handlePolygonClick = (displayCoords, naturalCoords) => {\n    // Check if clicking near the first point to close polygon\n    if (polygonPoints.length > 2) {\n      const firstPoint = polygonPoints[0];\n      const distance = Math.sqrt(Math.pow(displayCoords.x - firstPoint.x, 2) + Math.pow(displayCoords.y - firstPoint.y, 2));\n      if (distance < 15) {\n        // Close polygon\n        completePolygon();\n        return;\n      }\n    }\n\n    // Add new point to polygon\n    const newPoints = [...polygonPoints, displayCoords];\n    setPolygonPoints(newPoints);\n    setIsDrawing(true);\n    toast.info(`Point ${newPoints.length} added. ${newPoints.length > 2 ? 'Click near first point to close.' : ''}`);\n  };\n  const handleRectangleStart = (displayCoords, naturalCoords) => {\n    // Start drawing new rectangle zone with display coordinates for preview\n    console.log('📦 Starting rectangle zone drawing:', {\n      display: displayCoords,\n      natural: naturalCoords\n    });\n    setIsDrawing(true);\n    setCurrentZone({\n      id: `zone_${Date.now()}`,\n      type: selectedZoneType,\n      points: [displayCoords],\n      // Use display coordinates for preview\n      isComplete: false,\n      isPreview: true,\n      shape: 'rectangle'\n    });\n  };\n  const completePolygon = () => {\n    if (polygonPoints.length < 3) {\n      toast.error('Polygon must have at least 3 points');\n      return;\n    }\n\n    // Convert display coordinates to natural coordinates for storage\n    const naturalPoints = polygonPoints.map(point => {\n      const canvas = canvasRef.current;\n      const rect = canvas.getBoundingClientRect();\n      const scaleX = frameWidth / canvas.width;\n      const scaleY = frameHeight / canvas.height;\n      return {\n        x: point.x * scaleX,\n        y: point.y * scaleY\n      };\n    });\n    const newZone = {\n      id: `zone_${Date.now()}`,\n      type: selectedZoneType,\n      shape: 'polygon',\n      points: naturalPoints,\n      isComplete: true,\n      isPreview: false,\n      name: `${zoneTypes[selectedZoneType].name} ${zones.length + 1}`,\n      requiresScooper: zoneTypes[selectedZoneType].requiresScooper\n    };\n    const newZones = [...zones, newZone];\n    setZones(newZones);\n    onZonesUpdate(newZones);\n\n    // Reset polygon drawing state\n    setPolygonPoints([]);\n    setIsDrawing(false);\n    setPreviewPoint(null);\n    toast.success(`${zoneTypes[selectedZoneType].name} polygon zone created!`);\n    drawZones(); // Redraw with the new zone\n  };\n  const handleMouseMove = event => {\n    var _zoneTypes$selectedZo;\n    if (!isEnabled) return;\n    event.preventDefault();\n\n    // Get display coordinates for preview\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    const displayCoords = {\n      x: (event.clientX - rect.left) * scaleX,\n      y: (event.clientY - rect.top) * scaleY\n    };\n    if (drawingMode === 'polygon' && isDrawing && polygonPoints.length > 0) {\n      // Update preview point for polygon\n      setPreviewPoint(displayCoords);\n    } else if (drawingMode === 'rectangle' && isDrawing && currentZone) {\n      // Update current zone with display coordinates for rectangle preview\n      if (currentZone.points.length === 1) {\n        const updatedZone = {\n          ...currentZone,\n          points: [currentZone.points[0], displayCoords],\n          isPreview: true // Mark as preview\n        };\n        setCurrentZone(updatedZone);\n        console.log('🖱️ Mouse move - updating preview:', {\n          start: currentZone.points[0],\n          current: displayCoords\n        });\n        drawZones([...zones, updatedZone]);\n      }\n    }\n    ;\n    const handleMouseUp = event => {\n      if (!isDrawing || !currentZone) return;\n      console.log('🖱️ Mouse up event triggered');\n      event.preventDefault();\n\n      // Get display coordinates for the end point\n      const canvas = canvasRef.current;\n      const rect = canvas.getBoundingClientRect();\n      const scaleX = canvas.width / rect.width;\n      const scaleY = canvas.height / rect.height;\n      const displayEndCoords = {\n        x: (event.clientX - rect.left) * scaleX,\n        y: (event.clientY - rect.top) * scaleY\n      };\n\n      // Convert both start and end points from display to natural coordinates for storage\n      const backgroundImg = document.getElementById('roi-background-image');\n      let naturalStartCoords = currentZone.points[0];\n      let naturalEndCoords = displayEndCoords;\n      if (backgroundImg) {\n        const naturalWidth = backgroundImg.naturalWidth || frameWidth;\n        const naturalHeight = backgroundImg.naturalHeight || frameHeight;\n        const displayWidth = canvas.width;\n        const displayHeight = canvas.height;\n        const naturalScaleX = naturalWidth / displayWidth;\n        const naturalScaleY = naturalHeight / displayHeight;\n        naturalStartCoords = {\n          x: currentZone.points[0].x * naturalScaleX,\n          y: currentZone.points[0].y * naturalScaleY\n        };\n        naturalEndCoords = {\n          x: displayEndCoords.x * naturalScaleX,\n          y: displayEndCoords.y * naturalScaleY\n        };\n      }\n\n      // Complete rectangle zone with natural coordinates\n      if (currentZone.points.length >= 1) {\n        const newZone = {\n          ...currentZone,\n          points: [naturalStartCoords, naturalEndCoords],\n          // Store in natural coordinates\n          isComplete: true,\n          isPreview: false,\n          name: `${zoneTypes[selectedZoneType].name} ${zones.length + 1}`,\n          requiresScooper: zoneTypes[selectedZoneType].requiresScooper\n        };\n        console.log('✅ Zone created:', {\n          display: {\n            start: currentZone.points[0],\n            end: displayEndCoords\n          },\n          natural: {\n            start: naturalStartCoords,\n            end: naturalEndCoords\n          },\n          zone: newZone\n        });\n        const newZones = [...zones, newZone];\n        setZones(newZones);\n        onZonesUpdate(newZones);\n        toast.success(`${zoneTypes[selectedZoneType].name} zone created!`);\n      }\n      setIsDrawing(false);\n      setCurrentZone(null);\n      drawZones(); // Redraw with the new zone\n    };\n    const deleteZone = zoneId => {\n      setZones(zones.filter(zone => zone.id !== zoneId));\n      setEditingZone(null);\n      toast.info('Zone deleted');\n    };\n    const clearAllZones = () => {\n      setZones([]);\n      setEditingZone(null);\n      toast.info('All zones cleared');\n    };\n    const exportZones = () => {\n      const exportData = {\n        zones: zones.map(zone => ({\n          ...zone,\n          // Convert to relative coordinates (0-1)\n          points: zone.points.map(p => ({\n            x: p.x / frameWidth,\n            y: p.y / frameHeight\n          }))\n        })),\n        frameSize: {\n          width: frameWidth,\n          height: frameHeight\n        },\n        exportedAt: new Date().toISOString()\n      };\n      const blob = new Blob([JSON.stringify(exportData, null, 2)], {\n        type: 'application/json'\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `roi_zones_${Date.now()}.json`;\n      a.click();\n      URL.revokeObjectURL(url);\n      toast.success('Zones exported successfully!');\n    }; // exportZones function closing\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%'\n      },\n      children: [isEnabled && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '16px',\n          padding: '16px',\n          background: 'rgba(255,255,255,0.1)',\n          borderRadius: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            margin: '0 0 12px 0',\n            color: '#fff'\n          },\n          children: \"\\uD83C\\uDFAF ROI Zone Manager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '12px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '6px',\n              fontWeight: 'bold'\n            },\n            children: \"Zone Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedZoneType,\n            onChange: e => setSelectedZoneType(e.target.value),\n            style: {\n              padding: '8px',\n              borderRadius: '6px',\n              border: '1px solid rgba(255,255,255,0.3)',\n              background: 'rgba(255,255,255,0.1)',\n              color: 'white',\n              width: '200px'\n            },\n            children: Object.entries(zoneTypes).map(([key, config]) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: key,\n              style: {\n                background: '#333',\n                color: 'white'\n              },\n              children: [config.icon, \" \", config.name]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '12px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '6px',\n              fontWeight: 'bold'\n            },\n            children: \"Drawing Mode:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '8px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setDrawingMode('rectangle'),\n              style: {\n                padding: '8px 12px',\n                borderRadius: '6px',\n                border: drawingMode === 'rectangle' ? '2px solid #00FF88' : '1px solid rgba(255,255,255,0.3)',\n                background: drawingMode === 'rectangle' ? 'rgba(0,255,136,0.2)' : 'rgba(255,255,255,0.1)',\n                color: drawingMode === 'rectangle' ? '#00FF88' : '#fff',\n                cursor: 'pointer',\n                fontSize: '12px'\n              },\n              children: \"\\uD83D\\uDCE6 Rectangle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setDrawingMode('polygon'),\n              style: {\n                padding: '8px 12px',\n                borderRadius: '6px',\n                border: drawingMode === 'polygon' ? '2px solid #FF6B35' : '1px solid rgba(255,255,255,0.3)',\n                background: drawingMode === 'polygon' ? 'rgba(255,107,53,0.2)' : 'rgba(255,255,255,0.1)',\n                color: drawingMode === 'polygon' ? '#FF6B35' : '#fff',\n                cursor: 'pointer',\n                fontSize: '12px'\n              },\n              children: \"\\uD83D\\uDD3A Polygon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 731,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '11px',\n              color: '#ccc',\n              marginTop: '4px'\n            },\n            children: drawingMode === 'rectangle' ? '📦 Click and drag to create rectangular zones' : '🔺 Click points to create polygon zones (perfect for sauce areas)'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 746,\n            columnNumber: 11\n          }, this), ((_zoneTypes$selectedZo = zoneTypes[selectedZoneType]) === null || _zoneTypes$selectedZo === void 0 ? void 0 : _zoneTypes$selectedZo.preferredShape) && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '11px',\n              color: zoneTypes[selectedZoneType].preferredShape === 'polygon' ? '#FF6B35' : '#FFD23F',\n              marginTop: '2px',\n              fontStyle: 'italic'\n            },\n            children: [\"\\uD83D\\uDCA1 Recommended: \", zoneTypes[selectedZoneType].preferredShape, \" for \", zoneTypes[selectedZoneType].name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '8px 12px',\n            background: isEnabled ? 'rgba(0,255,136,0.2)' : 'rgba(255,255,255,0.1)',\n            borderRadius: '6px',\n            marginBottom: '12px',\n            border: `2px solid ${isEnabled ? '#00FF88' : 'rgba(255,255,255,0.3)'}`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: isEnabled ? '#00FF88' : '#fff'\n            },\n            children: isEnabled ? drawingMode === 'polygon' ? '🔺 Polygon Mode: ACTIVE - Click points to create polygon zones' : '📦 Rectangle Mode: ACTIVE - Click and drag to create zones' : '🔒 Drawing Mode: DISABLED'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 772,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '12px',\n              marginTop: '4px',\n              opacity: 0.8\n            },\n            children: [\"Debug: isEnabled=\", isEnabled.toString(), \", currentFrame=\", !!currentFrame ? 'available' : 'none', \", frameSize=\", frameWidth, \"x\", frameHeight]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 781,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 9\n        }, this), drawingMode === 'polygon' && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '8px 12px',\n            background: 'rgba(255,107,53,0.2)',\n            borderRadius: '6px',\n            marginBottom: '12px',\n            border: '2px solid #FF6B35'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#FF6B35',\n              fontWeight: 'bold',\n              marginBottom: '8px'\n            },\n            children: \"\\uD83D\\uDD3A Polygon Drawing Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 796,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '12px',\n              color: '#fff',\n              marginBottom: '8px'\n            },\n            children: [polygonPoints.length === 0 && 'Click to start drawing polygon', polygonPoints.length > 0 && polygonPoints.length < 3 && `${polygonPoints.length} points added. Need ${3 - polygonPoints.length} more.`, polygonPoints.length >= 3 && `${polygonPoints.length} points. Click near first point to close polygon.`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 799,\n            columnNumber: 13\n          }, this), polygonPoints.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '6px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                if (polygonPoints.length > 0) {\n                  const newPoints = polygonPoints.slice(0, -1);\n                  setPolygonPoints(newPoints);\n                  if (newPoints.length === 0) {\n                    setIsDrawing(false);\n                    setPreviewPoint(null);\n                  }\n                  toast.info('Last point removed');\n                }\n              },\n              style: {\n                padding: '4px 8px',\n                background: '#FF9800',\n                color: '#fff',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer',\n                fontSize: '11px'\n              },\n              children: \"\\u21B6 Undo Point\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setPolygonPoints([]);\n                setIsDrawing(false);\n                setPreviewPoint(null);\n                toast.info('Polygon cleared');\n              },\n              style: {\n                padding: '4px 8px',\n                background: '#f44336',\n                color: '#fff',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer',\n                fontSize: '11px'\n              },\n              children: \"\\uD83D\\uDDD1\\uFE0F Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 832,\n              columnNumber: 17\n            }, this), polygonPoints.length >= 3 && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: completePolygon,\n              style: {\n                padding: '4px 8px',\n                background: '#4CAF50',\n                color: '#fff',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer',\n                fontSize: '11px'\n              },\n              children: \"\\u2705 Complete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 852,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '8px',\n            flexWrap: 'wrap',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: () => setShowZones(!showZones),\n            children: showZones ? '👁️ Hide Zones' : '👁️‍🗨️ Show Zones'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 874,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-warning\",\n            onClick: clearAllZones,\n            disabled: zones.length === 0,\n            children: \"\\uD83D\\uDDD1\\uFE0F Clear All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 881,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: exportZones,\n            disabled: zones.length === 0,\n            children: \"\\uD83D\\uDCE5 Export Zones\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 889,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-info\",\n            onClick: () => {\n              // Add a test zone to verify functionality\n              const testZone = {\n                id: `test_zone_${Date.now()}`,\n                type: selectedZoneType,\n                points: [{\n                  x: 50,\n                  y: 50\n                }, {\n                  x: 200,\n                  y: 150\n                }],\n                isComplete: true,\n                name: `Test ${zoneTypes[selectedZoneType].name}`,\n                requiresScooper: zoneTypes[selectedZoneType].requiresScooper\n              };\n              setZones([...zones, testZone]);\n              toast.success('Test zone added!');\n            },\n            children: \"\\uD83E\\uDDEA Add Test Zone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 897,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: '16px',\n              fontSize: '14px',\n              opacity: 0.8\n            },\n            children: [\"Zones: \", zones.length, \" | \", isEnabled ? 'Click and drag to create zones' : 'Enable drawing to create zones']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 919,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 873,\n          columnNumber: 9\n        }, this), isEnabled && zones.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '12px',\n            background: 'rgba(255,210,63,0.2)',\n            borderRadius: '6px',\n            marginTop: '8px',\n            border: '2px dashed #FFD23F'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#FFD23F',\n              fontWeight: 'bold',\n              marginBottom: '4px'\n            },\n            children: \"\\uD83D\\uDCDD How to Draw Zones:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 933,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '14px',\n              opacity: 0.9\n            },\n            children: [\"1. Select zone type above (e.g., \\\"\\uD83C\\uDF45 Sauce Area\\\")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 937,\n              columnNumber: 64\n            }, this), \"2. Click and hold on the video to start drawing\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 938,\n              columnNumber: 62\n            }, this), \"3. Drag to create a rectangle\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 939,\n              columnNumber: 44\n            }, this), \"4. Release to complete the zone\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 936,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 926,\n          columnNumber: 11\n        }, this), isDrawing && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '8px 12px',\n            background: 'rgba(0,212,255,0.3)',\n            borderRadius: '6px',\n            marginTop: '8px',\n            textAlign: 'center',\n            border: '2px solid #00D4FF'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#00D4FF',\n              fontWeight: 'bold'\n            },\n            children: \"\\uD83C\\uDFA8 Drawing in progress... Drag to set zone size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 954,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 946,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative',\n          display: 'inline-block',\n          width: '100%',\n          maxWidth: '100%',\n          background: '#000',\n          borderRadius: '8px',\n          overflow: 'hidden'\n        },\n        children: [currentFrame && /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"roi-background-image\",\n          src: `data:image/jpeg;base64,${currentFrame}`,\n          alt: \"Video frame for zone configuration\",\n          style: {\n            width: '100%',\n            height: 'auto',\n            display: 'block',\n            borderRadius: '8px'\n          },\n          onLoad: e => {\n            console.log('🎯 ROI Manager: Video frame loaded');\n            const img = e.target;\n            const rect = img.getBoundingClientRect();\n            console.log('📐 Image dimensions:', {\n              natural: `${img.naturalWidth}x${img.naturalHeight}`,\n              display: `${rect.width}x${rect.height}`\n            });\n\n            // Update canvas size to match image\n            const canvas = canvasRef.current;\n            if (canvas) {\n              canvas.width = rect.width;\n              canvas.height = rect.height;\n              canvas.style.width = rect.width + 'px';\n              canvas.style.height = rect.height + 'px';\n              console.log('🎨 Canvas resized to match image');\n            }\n            setTimeout(() => drawZones(), 100);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 974,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          style: {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            cursor: isEnabled ? 'crosshair' : 'default',\n            pointerEvents: isEnabled ? 'auto' : 'none',\n            zIndex: 20,\n            borderRadius: '8px'\n          },\n          onMouseDown: handleMouseDown,\n          onMouseMove: handleMouseMove,\n          onMouseUp: handleMouseUp,\n          onContextMenu: e => e.preventDefault()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1009,\n          columnNumber: 9\n        }, this), !currentFrame && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            height: '300px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            background: 'rgba(255,255,255,0.1)',\n            color: 'rgba(255,255,255,0.6)'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '48px',\n                marginBottom: '16px'\n              },\n              children: \"\\uD83C\\uDFA5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1037,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Video frame will appear here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1038,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1036,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1027,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 963,\n        columnNumber: 7\n      }, this), isEnabled && zones.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '16px',\n          padding: '16px',\n          background: 'rgba(255,255,255,0.05)',\n          borderRadius: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            margin: '0 0 12px 0'\n          },\n          children: [\"\\uD83D\\uDCCB Active Zones (\", zones.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1052,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            maxHeight: '200px',\n            overflowY: 'auto'\n          },\n          children: zones.map((zone, index) => {\n            const config = zoneTypes[zone.type];\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                padding: '8px 12px',\n                marginBottom: '8px',\n                background: (editingZone === null || editingZone === void 0 ? void 0 : editingZone.id) === zone.id ? 'rgba(255,255,255,0.2)' : 'rgba(255,255,255,0.1)',\n                borderRadius: '6px',\n                border: `2px solid ${config.color}`\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [config.icon, \" \", zone.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1071,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1072,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  style: {\n                    opacity: 0.8\n                  },\n                  children: [config.description, \" | Scooper: \", zone.requiresScooper ? '🥄 Required' : '🚫 Not Required']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1073,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1070,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteZone(zone.id),\n                style: {\n                  background: '#FF4757',\n                  border: 'none',\n                  borderRadius: '4px',\n                  padding: '4px 8px',\n                  color: 'white',\n                  cursor: 'pointer',\n                  fontSize: '12px'\n                },\n                children: \"\\uD83D\\uDDD1\\uFE0F Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1077,\n                columnNumber: 19\n              }, this)]\n            }, zone.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1057,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1053,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1046,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 5\n    }, this);\n  }; // Missing closing brace added\n}; // Main component closing brace\n_s(ROIZoneManager, \"QjdcVgD3/3Gp4zfdOX2HoSd9T9c=\");\n_c = ROIZoneManager;\nexport default ROIZoneManager;\nvar _c;\n$RefreshReg$(_c, \"ROIZoneManager\");","map":{"version":3,"names":["React","useState","useRef","useEffect","toast","jsxDEV","_jsxDEV","ROIZoneManager","currentFrame","onZonesUpdate","existingZones","isEnabled","frameWidth","frameHeight","_s","canvasRef","zones","setZones","isDrawing","setIsDrawing","currentZone","setCurrentZone","selectedZoneType","setSelectedZoneType","editingZone","setEditingZone","showZones","setShowZones","drawingMode","setDrawingMode","polygonPoints","setPolygonPoints","previewPoint","setPreviewPoint","zoneTypes","sauce_area","name","color","fillColor","requiresScooper","icon","description","preferredShape","cheese_area","meat_area","vegetable_area","prep_surface","cleaning_area","findZoneAtPoint","x","y","find","zone","points","length","p1","p2","inZone","Math","min","max","console","log","point","drawZones","zonesToDraw","canvas","current","ctx","getContext","backgroundImg","document","getElementById","displayWidth","displayHeight","naturalWidth","naturalHeight","rect","getBoundingClientRect","width","height","style","scaleX","scaleY","canvasSize","frameSize","naturalSize","displaySize","scale","toFixed","clearRect","forEach","index","zoneConfig","type","shape","drawPolygonZone","drawRectangleZone","drawPolygonPreview","strokeStyle","lineWidth","setLineDash","strokeRect","abs","isPreviewZone","isPreview","scaledPoints","map","save","fillStyle","beginPath","moveTo","i","lineTo","closePath","fill","stroke","arc","PI","centerX","reduce","sum","p","centerY","font","textAlign","fillText","restore","toString","x1","y1","x2","y2","startX","startY","fillRect","labelX","labelY","reqText","currentFrameType","currentFrameLength","substring","getCanvasCoordinates","event","displayCoords","clientX","left","clientY","top","naturalCoords","naturalScaleX","naturalScaleY","client","display","natural","frame","handleMouseDown","preventDefault","clickedZone","handlePolygonClick","handleRectangleStart","firstPoint","distance","sqrt","pow","completePolygon","newPoints","info","id","Date","now","isComplete","error","naturalPoints","newZone","newZones","success","handleMouseMove","_zoneTypes$selectedZo","updatedZone","start","handleMouseUp","displayEndCoords","naturalStartCoords","naturalEndCoords","end","deleteZone","zoneId","filter","clearAllZones","exportZones","exportData","exportedAt","toISOString","blob","Blob","JSON","stringify","url","URL","createObjectURL","a","createElement","href","download","click","revokeObjectURL","children","marginBottom","padding","background","borderRadius","margin","fileName","_jsxFileName","lineNumber","columnNumber","fontWeight","value","onChange","e","target","border","Object","entries","key","config","gap","onClick","cursor","fontSize","marginTop","fontStyle","opacity","slice","flexWrap","alignItems","className","disabled","testZone","marginLeft","position","maxWidth","overflow","src","alt","onLoad","img","setTimeout","ref","pointerEvents","zIndex","onMouseDown","onMouseMove","onMouseUp","onContextMenu","justifyContent","maxHeight","overflowY","_c","$RefreshReg$"],"sources":["C:/Users/ayoub/OneDrive/Desktop/eagleAI/pizza_store_detection/services/frontend/src/components/ROIZoneManager.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\n\nconst ROIZoneManager = ({ \n  currentFrame, \n  onZonesUpdate, \n  existingZones = [], \n  isEnabled = true,\n  frameWidth = 640,\n  frameHeight = 480 \n}) => {\n  const canvasRef = useRef(null);\n  const [zones, setZones] = useState(existingZones);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [currentZone, setCurrentZone] = useState(null);\n  const [selectedZoneType, setSelectedZoneType] = useState('sauce_area');\n  const [editingZone, setEditingZone] = useState(null);\n  const [showZones, setShowZones] = useState(true);\n\n  // New polygon drawing states\n  const [drawingMode, setDrawingMode] = useState('rectangle'); // 'rectangle' or 'polygon'\n  const [polygonPoints, setPolygonPoints] = useState([]);\n  const [previewPoint, setPreviewPoint] = useState(null);\n\n  // Zone types with professional configuration\n  const zoneTypes = {\n    sauce_area: {\n      name: 'Sauce Area',\n      color: '#FF6B35',\n      fillColor: 'rgba(255, 107, 53, 0.2)',\n      requiresScooper: true,\n      icon: '🍅',\n      description: 'Sauce dispensing and handling area',\n      preferredShape: 'polygon' // Sauce areas work better with polygons\n    },\n    cheese_area: {\n      name: 'Cheese Area',\n      color: '#FFD23F',\n      fillColor: 'rgba(255, 210, 63, 0.2)',\n      requiresScooper: true,\n      icon: '🧀',\n      description: 'Cheese container and handling area',\n      preferredShape: 'rectangle' // Cheese containers are usually rectangular\n    },\n    meat_area: {\n      name: 'Meat/Protein Area',\n      color: '#FF4757',\n      fillColor: 'rgba(255, 71, 87, 0.2)',\n      requiresScooper: true,\n      icon: '🥓',\n      description: 'Meat and protein ingredient area'\n    },\n    vegetable_area: {\n      name: 'Vegetable Area',\n      color: '#2ED573',\n      fillColor: 'rgba(46, 213, 115, 0.2)',\n      requiresScooper: true,\n      icon: '🥬',\n      description: 'Vegetable and fresh ingredient area'\n    },\n    prep_surface: {\n      name: 'Prep Surface',\n      color: '#5352ED',\n      fillColor: 'rgba(83, 82, 237, 0.2)',\n      requiresScooper: false,\n      icon: '🍕',\n      description: 'Pizza preparation surface (no scooper required)'\n    },\n    cleaning_area: {\n      name: 'Cleaning Area',\n      color: '#00D2D3',\n      fillColor: 'rgba(0, 210, 211, 0.2)',\n      requiresScooper: false,\n      icon: '🧽',\n      description: 'Cleaning and sanitization area'\n    }\n  };\n\n  // Function definitions (moved to top to avoid hoisting issues)\n  const findZoneAtPoint = (x, y) => {\n    // x, y are in natural coordinates, zones are stored in natural coordinates\n    return zones.find(zone => {\n      if (zone.points.length === 2) {\n        const [p1, p2] = zone.points;\n        const inZone = x >= Math.min(p1.x, p2.x) && x <= Math.max(p1.x, p2.x) &&\n                      y >= Math.min(p1.y, p2.y) && y <= Math.max(p1.y, p2.y);\n\n        console.log(`🔍 Checking zone ${zone.name}:`, {\n          point: { x, y },\n          zone: { p1, p2 },\n          inZone\n        });\n\n        return inZone;\n      }\n      return false;\n    });\n  };\n\n  const drawZones = (zonesToDraw = zones) => {\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      console.log('❌ No canvas reference');\n      return;\n    }\n\n    const ctx = canvas.getContext('2d');\n\n    // Get the background image to match its size\n    const backgroundImg = document.getElementById('roi-background-image');\n    let displayWidth, displayHeight, naturalWidth, naturalHeight;\n\n    if (backgroundImg) {\n      const rect = backgroundImg.getBoundingClientRect();\n      displayWidth = rect.width;\n      displayHeight = rect.height;\n      naturalWidth = backgroundImg.naturalWidth || frameWidth;\n      naturalHeight = backgroundImg.naturalHeight || frameHeight;\n\n      canvas.width = displayWidth;\n      canvas.height = displayHeight;\n      canvas.style.width = displayWidth + 'px';\n      canvas.style.height = displayHeight + 'px';\n    } else {\n      // Fallback to provided dimensions\n      displayWidth = frameWidth;\n      displayHeight = frameHeight;\n      naturalWidth = frameWidth;\n      naturalHeight = frameHeight;\n      canvas.width = displayWidth;\n      canvas.height = displayHeight;\n    }\n\n    // Calculate scaling factors from natural to display size\n    const scaleX = displayWidth / naturalWidth;\n    const scaleY = displayHeight / naturalHeight;\n\n    console.log('🎨 Drawing zones on canvas:', {\n      canvasSize: `${canvas.width}x${canvas.height}`,\n      frameSize: `${frameWidth}x${frameHeight}`,\n      naturalSize: `${naturalWidth}x${naturalHeight}`,\n      displaySize: `${displayWidth}x${displayHeight}`,\n      scale: `${scaleX.toFixed(3)}x${scaleY.toFixed(3)}`,\n      zones: zonesToDraw.length,\n      backgroundImg: !!backgroundImg\n    });\n\n    // Clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    if (!showZones) return;\n\n    // Draw each zone with proper coordinate scaling\n    zonesToDraw.forEach((zone, index) => {\n      const zoneConfig = zoneTypes[zone.type];\n\n      if (zone.shape === 'polygon' && zone.points.length >= 3) {\n        drawPolygonZone(ctx, zone, zoneConfig, scaleX, scaleY);\n      } else if (zone.points.length >= 2) {\n        drawRectangleZone(ctx, zone, zoneConfig, scaleX, scaleY);\n      }\n    });\n\n    // Draw current polygon being drawn\n    if (drawingMode === 'polygon' && polygonPoints.length > 0) {\n      drawPolygonPreview(ctx, polygonPoints, previewPoint, zoneTypes[selectedZoneType]);\n    }\n\n    // Draw current zone being drawn (rectangle mode)\n    if (drawingMode === 'rectangle' && currentZone && currentZone.points.length === 2) {\n      const zoneConfig = zoneTypes[currentZone.type];\n      const [p1, p2] = currentZone.points;\n\n      ctx.strokeStyle = zoneConfig.color;\n      ctx.lineWidth = 3;\n      ctx.setLineDash([10, 5]);\n      ctx.strokeRect(\n        Math.min(p1.x, p2.x),\n        Math.min(p1.y, p2.y),\n        Math.abs(p2.x - p1.x),\n        Math.abs(p2.y - p1.y)\n      );\n    }\n  };\n\n  const drawPolygonZone = (ctx, zone, zoneConfig, scaleX, scaleY) => {\n    const isPreviewZone = zone.isPreview === true;\n\n    // Scale points from natural to display coordinates (unless it's a preview)\n    const scaledPoints = zone.points.map(point => {\n      if (isPreviewZone) {\n        return point; // Already in display coordinates\n      } else {\n        return {\n          x: point.x * scaleX,\n          y: point.y * scaleY\n        };\n      }\n    });\n\n    // Draw polygon\n    ctx.save();\n    ctx.strokeStyle = zoneConfig.color;\n    ctx.fillStyle = zoneConfig.fillColor;\n    ctx.lineWidth = isPreviewZone ? 3 : 2;\n    ctx.setLineDash(isPreviewZone ? [5, 5] : []);\n\n    ctx.beginPath();\n    ctx.moveTo(scaledPoints[0].x, scaledPoints[0].y);\n\n    for (let i = 1; i < scaledPoints.length; i++) {\n      ctx.lineTo(scaledPoints[i].x, scaledPoints[i].y);\n    }\n\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n\n    // Draw points\n    scaledPoints.forEach((point, index) => {\n      ctx.beginPath();\n      ctx.arc(point.x, point.y, 4, 0, 2 * Math.PI);\n      ctx.fillStyle = zoneConfig.color;\n      ctx.fill();\n      ctx.strokeStyle = '#fff';\n      ctx.lineWidth = 1;\n      ctx.stroke();\n    });\n\n    // Draw zone label\n    const centerX = scaledPoints.reduce((sum, p) => sum + p.x, 0) / scaledPoints.length;\n    const centerY = scaledPoints.reduce((sum, p) => sum + p.y, 0) / scaledPoints.length;\n\n    ctx.fillStyle = '#fff';\n    ctx.font = 'bold 12px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText(`${zoneConfig.icon} ${zone.name}`, centerX, centerY);\n\n    ctx.restore();\n  };\n\n  const drawPolygonPreview = (ctx, points, previewPoint, zoneConfig) => {\n    if (points.length === 0) return;\n\n    ctx.save();\n    ctx.strokeStyle = zoneConfig.color;\n    ctx.lineWidth = 3;\n    ctx.setLineDash([5, 5]);\n\n    // Draw lines between points\n    ctx.beginPath();\n    ctx.moveTo(points[0].x, points[0].y);\n\n    for (let i = 1; i < points.length; i++) {\n      ctx.lineTo(points[i].x, points[i].y);\n    }\n\n    // Draw preview line to mouse\n    if (previewPoint) {\n      ctx.lineTo(previewPoint.x, previewPoint.y);\n    }\n\n    ctx.stroke();\n\n    // Draw points\n    points.forEach((point, index) => {\n      ctx.beginPath();\n      ctx.arc(point.x, point.y, 6, 0, 2 * Math.PI);\n      ctx.fillStyle = zoneConfig.color;\n      ctx.fill();\n      ctx.strokeStyle = '#fff';\n      ctx.lineWidth = 2;\n      ctx.stroke();\n\n      // Draw point number\n      ctx.fillStyle = '#fff';\n      ctx.font = '10px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText((index + 1).toString(), point.x, point.y + 3);\n    });\n\n    ctx.restore();\n  };\n\n  const drawRectangleZone = (ctx, zone, zoneConfig, scaleX, scaleY) => {\n    const [p1, p2] = zone.points;\n\n    const isPreviewZone = zone.isPreview === true;\n\n    // Scale coordinates from natural to display (unless it's a preview)\n    let x1, y1, x2, y2;\n    if (isPreviewZone) {\n      x1 = p1.x;\n      y1 = p1.y;\n      x2 = p2.x;\n      y2 = p2.y;\n    } else {\n      x1 = p1.x * scaleX;\n      y1 = p1.y * scaleY;\n      x2 = p2.x * scaleX;\n      y2 = p2.y * scaleY;\n    }\n\n    const width = Math.abs(x2 - x1);\n    const height = Math.abs(y2 - y1);\n    const startX = Math.min(x1, x2);\n    const startY = Math.min(y1, y2);\n\n    // Draw rectangle\n    ctx.save();\n    ctx.fillStyle = zoneConfig.fillColor;\n    ctx.fillRect(startX, startY, width, height);\n\n    ctx.strokeStyle = zoneConfig.color;\n    ctx.lineWidth = isPreviewZone ? 3 : 2;\n    ctx.setLineDash(isPreviewZone ? [10, 5] : []);\n    ctx.strokeRect(startX, startY, width, height);\n\n    // Draw zone label\n    const labelX = startX + width / 2;\n    const labelY = startY + height / 2;\n\n    ctx.fillStyle = '#fff';\n    ctx.font = 'bold 14px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText(`${zoneConfig.icon} ${zone.name || zoneConfig.name}`, labelX, labelY);\n\n    // Draw requirement text\n    const reqText = zone.requiresScooper ? 'Scooper Required' : 'No Scooper Required';\n    ctx.font = '12px Arial';\n    ctx.fillStyle = zone.requiresScooper ? '#FF4757' : '#2ED573';\n    ctx.fillText(reqText, labelX, labelY + 18);\n\n    ctx.restore();\n  };\n\n  useEffect(() => {\n    if (onZonesUpdate) {\n      onZonesUpdate(zones);\n    }\n  }, [zones, onZonesUpdate]);\n\n  useEffect(() => {\n    console.log('🎯 ROI Zone Manager useEffect triggered:', {\n      currentFrame: !!currentFrame,\n      currentFrameType: typeof currentFrame,\n      currentFrameLength: currentFrame?.length || 0,\n      frameSize: `${frameWidth}x${frameHeight}`,\n      zones: zones.length,\n      showZones\n    });\n\n    if (currentFrame) {\n      console.log('✅ ROI Manager has frame data - length:', currentFrame.length);\n      console.log('🔍 Frame data preview:', currentFrame.substring(0, 50) + '...');\n    } else {\n      console.log('❌ ROI Manager - No frame data received');\n    }\n\n    drawZones();\n  }, [zones, currentFrame, showZones, frameWidth, frameHeight]);\n\n  const getCanvasCoordinates = (event) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return { x: 0, y: 0 };\n\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n\n    // Get display coordinates\n    const displayCoords = {\n      x: (event.clientX - rect.left) * scaleX,\n      y: (event.clientY - rect.top) * scaleY\n    };\n\n    // Convert to natural frame coordinates for storage\n    const backgroundImg = document.getElementById('roi-background-image');\n    let naturalCoords = displayCoords;\n\n    if (backgroundImg) {\n      const naturalWidth = backgroundImg.naturalWidth || frameWidth;\n      const naturalHeight = backgroundImg.naturalHeight || frameHeight;\n      const displayWidth = canvas.width;\n      const displayHeight = canvas.height;\n\n      const naturalScaleX = naturalWidth / displayWidth;\n      const naturalScaleY = naturalHeight / displayHeight;\n\n      naturalCoords = {\n        x: displayCoords.x * naturalScaleX,\n        y: displayCoords.y * naturalScaleY\n      };\n    }\n\n    console.log('🖱️ Mouse coordinates:', {\n      client: { x: event.clientX, y: event.clientY },\n      display: displayCoords,\n      natural: naturalCoords,\n      canvas: { width: canvas.width, height: canvas.height },\n      frame: { width: frameWidth, height: frameHeight }\n    });\n\n    return naturalCoords;\n  };\n\n  const handleMouseDown = (event) => {\n    if (!isEnabled) {\n      console.log('🚫 Drawing disabled');\n      return;\n    }\n\n    console.log('🖱️ Mouse down event triggered');\n    event.preventDefault();\n\n    // Get both natural and display coordinates\n    const naturalCoords = getCanvasCoordinates(event); // This returns natural coordinates\n\n    // Also get display coordinates for drawing preview\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n\n    const displayCoords = {\n      x: (event.clientX - rect.left) * scaleX,\n      y: (event.clientY - rect.top) * scaleY\n    };\n\n    // Check if clicking on existing zone for editing (use natural coordinates)\n    const clickedZone = findZoneAtPoint(naturalCoords.x, naturalCoords.y);\n    if (clickedZone) {\n      console.log('✏️ Editing existing zone:', clickedZone.name);\n      setEditingZone(clickedZone);\n      return;\n    }\n\n    if (drawingMode === 'polygon') {\n      handlePolygonClick(displayCoords, naturalCoords);\n    } else {\n      handleRectangleStart(displayCoords, naturalCoords);\n    }\n  };\n\n  const handlePolygonClick = (displayCoords, naturalCoords) => {\n    // Check if clicking near the first point to close polygon\n    if (polygonPoints.length > 2) {\n      const firstPoint = polygonPoints[0];\n      const distance = Math.sqrt(\n        Math.pow(displayCoords.x - firstPoint.x, 2) + Math.pow(displayCoords.y - firstPoint.y, 2)\n      );\n\n      if (distance < 15) {\n        // Close polygon\n        completePolygon();\n        return;\n      }\n    }\n\n    // Add new point to polygon\n    const newPoints = [...polygonPoints, displayCoords];\n    setPolygonPoints(newPoints);\n    setIsDrawing(true);\n\n    toast.info(`Point ${newPoints.length} added. ${newPoints.length > 2 ? 'Click near first point to close.' : ''}`);\n  };\n\n  const handleRectangleStart = (displayCoords, naturalCoords) => {\n    // Start drawing new rectangle zone with display coordinates for preview\n    console.log('📦 Starting rectangle zone drawing:', {\n      display: displayCoords,\n      natural: naturalCoords\n    });\n    setIsDrawing(true);\n    setCurrentZone({\n      id: `zone_${Date.now()}`,\n      type: selectedZoneType,\n      points: [displayCoords], // Use display coordinates for preview\n      isComplete: false,\n      isPreview: true,\n      shape: 'rectangle'\n    });\n  };\n\n  const completePolygon = () => {\n    if (polygonPoints.length < 3) {\n      toast.error('Polygon must have at least 3 points');\n      return;\n    }\n\n    // Convert display coordinates to natural coordinates for storage\n    const naturalPoints = polygonPoints.map(point => {\n      const canvas = canvasRef.current;\n      const rect = canvas.getBoundingClientRect();\n      const scaleX = frameWidth / canvas.width;\n      const scaleY = frameHeight / canvas.height;\n\n      return {\n        x: point.x * scaleX,\n        y: point.y * scaleY\n      };\n    });\n\n    const newZone = {\n      id: `zone_${Date.now()}`,\n      type: selectedZoneType,\n      shape: 'polygon',\n      points: naturalPoints,\n      isComplete: true,\n      isPreview: false,\n      name: `${zoneTypes[selectedZoneType].name} ${zones.length + 1}`,\n      requiresScooper: zoneTypes[selectedZoneType].requiresScooper\n    };\n\n    const newZones = [...zones, newZone];\n    setZones(newZones);\n    onZonesUpdate(newZones);\n\n    // Reset polygon drawing state\n    setPolygonPoints([]);\n    setIsDrawing(false);\n    setPreviewPoint(null);\n\n    toast.success(`${zoneTypes[selectedZoneType].name} polygon zone created!`);\n    drawZones(); // Redraw with the new zone\n  };\n\n  const handleMouseMove = (event) => {\n    if (!isEnabled) return;\n\n    event.preventDefault();\n\n    // Get display coordinates for preview\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n\n    const displayCoords = {\n      x: (event.clientX - rect.left) * scaleX,\n      y: (event.clientY - rect.top) * scaleY\n    };\n\n    if (drawingMode === 'polygon' && isDrawing && polygonPoints.length > 0) {\n      // Update preview point for polygon\n      setPreviewPoint(displayCoords);\n    } else if (drawingMode === 'rectangle' && isDrawing && currentZone) {\n      // Update current zone with display coordinates for rectangle preview\n      if (currentZone.points.length === 1) {\n        const updatedZone = {\n          ...currentZone,\n          points: [currentZone.points[0], displayCoords],\n          isPreview: true // Mark as preview\n        };\n        setCurrentZone(updatedZone);\n      console.log('🖱️ Mouse move - updating preview:', {\n        start: currentZone.points[0],\n        current: displayCoords\n      });\n      drawZones([...zones, updatedZone]);\n    }\n  };\n\n  const handleMouseUp = (event) => {\n    if (!isDrawing || !currentZone) return;\n\n    console.log('🖱️ Mouse up event triggered');\n    event.preventDefault();\n\n    // Get display coordinates for the end point\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n\n    const displayEndCoords = {\n      x: (event.clientX - rect.left) * scaleX,\n      y: (event.clientY - rect.top) * scaleY\n    };\n\n    // Convert both start and end points from display to natural coordinates for storage\n    const backgroundImg = document.getElementById('roi-background-image');\n    let naturalStartCoords = currentZone.points[0];\n    let naturalEndCoords = displayEndCoords;\n\n    if (backgroundImg) {\n      const naturalWidth = backgroundImg.naturalWidth || frameWidth;\n      const naturalHeight = backgroundImg.naturalHeight || frameHeight;\n      const displayWidth = canvas.width;\n      const displayHeight = canvas.height;\n\n      const naturalScaleX = naturalWidth / displayWidth;\n      const naturalScaleY = naturalHeight / displayHeight;\n\n      naturalStartCoords = {\n        x: currentZone.points[0].x * naturalScaleX,\n        y: currentZone.points[0].y * naturalScaleY\n      };\n\n      naturalEndCoords = {\n        x: displayEndCoords.x * naturalScaleX,\n        y: displayEndCoords.y * naturalScaleY\n      };\n    }\n\n    // Complete rectangle zone with natural coordinates\n    if (currentZone.points.length >= 1) {\n      const newZone = {\n        ...currentZone,\n        points: [naturalStartCoords, naturalEndCoords], // Store in natural coordinates\n        isComplete: true,\n        isPreview: false,\n        name: `${zoneTypes[selectedZoneType].name} ${zones.length + 1}`,\n        requiresScooper: zoneTypes[selectedZoneType].requiresScooper\n      };\n\n      console.log('✅ Zone created:', {\n        display: { start: currentZone.points[0], end: displayEndCoords },\n        natural: { start: naturalStartCoords, end: naturalEndCoords },\n        zone: newZone\n      });\n\n      const newZones = [...zones, newZone];\n      setZones(newZones);\n      onZonesUpdate(newZones);\n      toast.success(`${zoneTypes[selectedZoneType].name} zone created!`);\n    }\n\n    setIsDrawing(false);\n    setCurrentZone(null);\n    drawZones(); // Redraw with the new zone\n  };\n\n  const deleteZone = (zoneId) => {\n    setZones(zones.filter(zone => zone.id !== zoneId));\n    setEditingZone(null);\n    toast.info('Zone deleted');\n  };\n\n  const clearAllZones = () => {\n    setZones([]);\n    setEditingZone(null);\n    toast.info('All zones cleared');\n  };\n\n  const exportZones = () => {\n    const exportData = {\n      zones: zones.map(zone => ({\n        ...zone,\n        // Convert to relative coordinates (0-1)\n        points: zone.points.map(p => ({\n          x: p.x / frameWidth,\n          y: p.y / frameHeight\n        }))\n      })),\n      frameSize: { width: frameWidth, height: frameHeight },\n      exportedAt: new Date().toISOString()\n    };\n    \n    const blob = new Blob([JSON.stringify(exportData, null, 2)], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `roi_zones_${Date.now()}.json`;\n    a.click();\n    URL.revokeObjectURL(url);\n    \n    toast.success('Zones exported successfully!');\n  }; // exportZones function closing\n\n  return (\n    <div style={{ width: '100%' }}>\n      {/* Zone Controls - Only show in editing mode */}\n      {isEnabled && (\n        <div style={{\n          marginBottom: '16px',\n          padding: '16px',\n          background: 'rgba(255,255,255,0.1)',\n          borderRadius: '8px'\n        }}>\n        <h4 style={{ margin: '0 0 12px 0', color: '#fff' }}>🎯 ROI Zone Manager</h4>\n        \n        {/* Zone Type Selector */}\n        <div style={{ marginBottom: '12px' }}>\n          <label style={{ display: 'block', marginBottom: '6px', fontWeight: 'bold' }}>\n            Zone Type:\n          </label>\n          <select\n            value={selectedZoneType}\n            onChange={(e) => setSelectedZoneType(e.target.value)}\n            style={{\n              padding: '8px',\n              borderRadius: '6px',\n              border: '1px solid rgba(255,255,255,0.3)',\n              background: 'rgba(255,255,255,0.1)',\n              color: 'white',\n              width: '200px'\n            }}\n          >\n            {Object.entries(zoneTypes).map(([key, config]) => (\n              <option key={key} value={key} style={{ background: '#333', color: 'white' }}>\n                {config.icon} {config.name}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {/* Drawing Mode Selector */}\n        <div style={{ marginBottom: '12px' }}>\n          <label style={{ display: 'block', marginBottom: '6px', fontWeight: 'bold' }}>\n            Drawing Mode:\n          </label>\n          <div style={{ display: 'flex', gap: '8px' }}>\n            <button\n              onClick={() => setDrawingMode('rectangle')}\n              style={{\n                padding: '8px 12px',\n                borderRadius: '6px',\n                border: drawingMode === 'rectangle' ? '2px solid #00FF88' : '1px solid rgba(255,255,255,0.3)',\n                background: drawingMode === 'rectangle' ? 'rgba(0,255,136,0.2)' : 'rgba(255,255,255,0.1)',\n                color: drawingMode === 'rectangle' ? '#00FF88' : '#fff',\n                cursor: 'pointer',\n                fontSize: '12px'\n              }}\n            >\n              📦 Rectangle\n            </button>\n            <button\n              onClick={() => setDrawingMode('polygon')}\n              style={{\n                padding: '8px 12px',\n                borderRadius: '6px',\n                border: drawingMode === 'polygon' ? '2px solid #FF6B35' : '1px solid rgba(255,255,255,0.3)',\n                background: drawingMode === 'polygon' ? 'rgba(255,107,53,0.2)' : 'rgba(255,255,255,0.1)',\n                color: drawingMode === 'polygon' ? '#FF6B35' : '#fff',\n                cursor: 'pointer',\n                fontSize: '12px'\n              }}\n            >\n              🔺 Polygon\n            </button>\n          </div>\n          <div style={{ fontSize: '11px', color: '#ccc', marginTop: '4px' }}>\n            {drawingMode === 'rectangle' ?\n              '📦 Click and drag to create rectangular zones' :\n              '🔺 Click points to create polygon zones (perfect for sauce areas)'\n            }\n          </div>\n          {zoneTypes[selectedZoneType]?.preferredShape && (\n            <div style={{\n              fontSize: '11px',\n              color: zoneTypes[selectedZoneType].preferredShape === 'polygon' ? '#FF6B35' : '#FFD23F',\n              marginTop: '2px',\n              fontStyle: 'italic'\n            }}>\n              💡 Recommended: {zoneTypes[selectedZoneType].preferredShape} for {zoneTypes[selectedZoneType].name}\n            </div>\n          )}\n        </div>\n\n        {/* Drawing Status */}\n        <div style={{\n          padding: '8px 12px',\n          background: isEnabled ? 'rgba(0,255,136,0.2)' : 'rgba(255,255,255,0.1)',\n          borderRadius: '6px',\n          marginBottom: '12px',\n          border: `2px solid ${isEnabled ? '#00FF88' : 'rgba(255,255,255,0.3)'}`\n        }}>\n          <span style={{ color: isEnabled ? '#00FF88' : '#fff' }}>\n            {isEnabled ?\n              (drawingMode === 'polygon' ?\n                '🔺 Polygon Mode: ACTIVE - Click points to create polygon zones' :\n                '📦 Rectangle Mode: ACTIVE - Click and drag to create zones'\n              ) :\n              '🔒 Drawing Mode: DISABLED'\n            }\n          </span>\n          <div style={{ fontSize: '12px', marginTop: '4px', opacity: 0.8 }}>\n            Debug: isEnabled={isEnabled.toString()}, currentFrame={!!currentFrame ? 'available' : 'none'},\n            frameSize={frameWidth}x{frameHeight}\n          </div>\n        </div>\n\n        {/* Polygon Drawing Controls */}\n        {drawingMode === 'polygon' && (\n          <div style={{\n            padding: '8px 12px',\n            background: 'rgba(255,107,53,0.2)',\n            borderRadius: '6px',\n            marginBottom: '12px',\n            border: '2px solid #FF6B35'\n          }}>\n            <div style={{ color: '#FF6B35', fontWeight: 'bold', marginBottom: '8px' }}>\n              🔺 Polygon Drawing Status\n            </div>\n            <div style={{ fontSize: '12px', color: '#fff', marginBottom: '8px' }}>\n              {polygonPoints.length === 0 && 'Click to start drawing polygon'}\n              {polygonPoints.length > 0 && polygonPoints.length < 3 &&\n                `${polygonPoints.length} points added. Need ${3 - polygonPoints.length} more.`}\n              {polygonPoints.length >= 3 &&\n                `${polygonPoints.length} points. Click near first point to close polygon.`}\n            </div>\n            {polygonPoints.length > 0 && (\n              <div style={{ display: 'flex', gap: '6px' }}>\n                <button\n                  onClick={() => {\n                    if (polygonPoints.length > 0) {\n                      const newPoints = polygonPoints.slice(0, -1);\n                      setPolygonPoints(newPoints);\n                      if (newPoints.length === 0) {\n                        setIsDrawing(false);\n                        setPreviewPoint(null);\n                      }\n                      toast.info('Last point removed');\n                    }\n                  }}\n                  style={{\n                    padding: '4px 8px',\n                    background: '#FF9800',\n                    color: '#fff',\n                    border: 'none',\n                    borderRadius: '4px',\n                    cursor: 'pointer',\n                    fontSize: '11px'\n                  }}\n                >\n                  ↶ Undo Point\n                </button>\n                <button\n                  onClick={() => {\n                    setPolygonPoints([]);\n                    setIsDrawing(false);\n                    setPreviewPoint(null);\n                    toast.info('Polygon cleared');\n                  }}\n                  style={{\n                    padding: '4px 8px',\n                    background: '#f44336',\n                    color: '#fff',\n                    border: 'none',\n                    borderRadius: '4px',\n                    cursor: 'pointer',\n                    fontSize: '11px'\n                  }}\n                >\n                  🗑️ Clear\n                </button>\n                {polygonPoints.length >= 3 && (\n                  <button\n                    onClick={completePolygon}\n                    style={{\n                      padding: '4px 8px',\n                      background: '#4CAF50',\n                      color: '#fff',\n                      border: 'none',\n                      borderRadius: '4px',\n                      cursor: 'pointer',\n                      fontSize: '11px'\n                    }}\n                  >\n                    ✅ Complete\n                  </button>\n                )}\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Controls */}\n        <div style={{ display: 'flex', gap: '8px', flexWrap: 'wrap', alignItems: 'center' }}>\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => setShowZones(!showZones)}\n          >\n            {showZones ? '👁️ Hide Zones' : '👁️‍🗨️ Show Zones'}\n          </button>\n          \n          <button\n            className=\"btn btn-warning\"\n            onClick={clearAllZones}\n            disabled={zones.length === 0}\n          >\n            🗑️ Clear All\n          </button>\n          \n          <button\n            className=\"btn btn-success\"\n            onClick={exportZones}\n            disabled={zones.length === 0}\n          >\n            📥 Export Zones\n          </button>\n\n          <button\n            className=\"btn btn-info\"\n            onClick={() => {\n              // Add a test zone to verify functionality\n              const testZone = {\n                id: `test_zone_${Date.now()}`,\n                type: selectedZoneType,\n                points: [\n                  { x: 50, y: 50 },\n                  { x: 200, y: 150 }\n                ],\n                isComplete: true,\n                name: `Test ${zoneTypes[selectedZoneType].name}`,\n                requiresScooper: zoneTypes[selectedZoneType].requiresScooper\n              };\n              setZones([...zones, testZone]);\n              toast.success('Test zone added!');\n            }}\n          >\n            🧪 Add Test Zone\n          </button>\n          \n          <span style={{ marginLeft: '16px', fontSize: '14px', opacity: 0.8 }}>\n            Zones: {zones.length} | {isEnabled ? 'Click and drag to create zones' : 'Enable drawing to create zones'}\n          </span>\n        </div>\n\n        {/* Drawing Instructions */}\n        {isEnabled && zones.length === 0 && (\n          <div style={{\n            padding: '12px',\n            background: 'rgba(255,210,63,0.2)',\n            borderRadius: '6px',\n            marginTop: '8px',\n            border: '2px dashed #FFD23F'\n          }}>\n            <div style={{ color: '#FFD23F', fontWeight: 'bold', marginBottom: '4px' }}>\n              📝 How to Draw Zones:\n            </div>\n            <div style={{ fontSize: '14px', opacity: 0.9 }}>\n              1. Select zone type above (e.g., \"🍅 Sauce Area\")<br />\n              2. Click and hold on the video to start drawing<br />\n              3. Drag to create a rectangle<br />\n              4. Release to complete the zone\n            </div>\n          </div>\n        )}\n\n        {isDrawing && (\n          <div style={{\n            padding: '8px 12px',\n            background: 'rgba(0,212,255,0.3)',\n            borderRadius: '6px',\n            marginTop: '8px',\n            textAlign: 'center',\n            border: '2px solid #00D4FF'\n          }}>\n            <span style={{ color: '#00D4FF', fontWeight: 'bold' }}>\n              🎨 Drawing in progress... Drag to set zone size\n            </span>\n          </div>\n        )}\n        </div>\n      )}\n\n      {/* Video with zone drawing overlay */}\n      <div style={{\n        position: 'relative',\n        display: 'inline-block',\n        width: '100%',\n        maxWidth: '100%',\n        background: '#000',\n        borderRadius: '8px',\n        overflow: 'hidden'\n      }}>\n        {/* Background video frame */}\n        {currentFrame && (\n          <img\n            id=\"roi-background-image\"\n            src={`data:image/jpeg;base64,${currentFrame}`}\n            alt=\"Video frame for zone configuration\"\n            style={{\n              width: '100%',\n              height: 'auto',\n              display: 'block',\n              borderRadius: '8px'\n            }}\n            onLoad={(e) => {\n              console.log('🎯 ROI Manager: Video frame loaded');\n              const img = e.target;\n              const rect = img.getBoundingClientRect();\n              console.log('📐 Image dimensions:', {\n                natural: `${img.naturalWidth}x${img.naturalHeight}`,\n                display: `${rect.width}x${rect.height}`\n              });\n\n              // Update canvas size to match image\n              const canvas = canvasRef.current;\n              if (canvas) {\n                canvas.width = rect.width;\n                canvas.height = rect.height;\n                canvas.style.width = rect.width + 'px';\n                canvas.style.height = rect.height + 'px';\n                console.log('🎨 Canvas resized to match image');\n              }\n\n              setTimeout(() => drawZones(), 100);\n            }}\n          />\n        )}\n\n        {/* Zone drawing canvas overlay */}\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            cursor: isEnabled ? 'crosshair' : 'default',\n            pointerEvents: isEnabled ? 'auto' : 'none',\n            zIndex: 20,\n            borderRadius: '8px'\n          }}\n          onMouseDown={handleMouseDown}\n          onMouseMove={handleMouseMove}\n          onMouseUp={handleMouseUp}\n          onContextMenu={(e) => e.preventDefault()}\n        />\n\n        {!currentFrame && (\n          <div style={{\n            width: '100%',\n            height: '300px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            background: 'rgba(255,255,255,0.1)',\n            color: 'rgba(255,255,255,0.6)'\n          }}>\n            <div style={{ textAlign: 'center' }}>\n              <div style={{ fontSize: '48px', marginBottom: '16px' }}>🎥</div>\n              <p>Video frame will appear here</p>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Zone List - Only show in editing mode */}\n      {isEnabled && zones.length > 0 && (\n        <div style={{\n          marginTop: '16px',\n          padding: '16px',\n          background: 'rgba(255,255,255,0.05)',\n          borderRadius: '8px'\n        }}>\n          <h4 style={{ margin: '0 0 12px 0' }}>📋 Active Zones ({zones.length})</h4>\n          <div style={{ maxHeight: '200px', overflowY: 'auto' }}>\n            {zones.map((zone, index) => {\n              const config = zoneTypes[zone.type];\n              return (\n                <div\n                  key={zone.id}\n                  style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    padding: '8px 12px',\n                    marginBottom: '8px',\n                    background: editingZone?.id === zone.id ? 'rgba(255,255,255,0.2)' : 'rgba(255,255,255,0.1)',\n                    borderRadius: '6px',\n                    border: `2px solid ${config.color}`\n                  }}\n                >\n                  <div>\n                    <strong>{config.icon} {zone.name}</strong>\n                    <br />\n                    <small style={{ opacity: 0.8 }}>\n                      {config.description} | Scooper: {zone.requiresScooper ? '🥄 Required' : '🚫 Not Required'}\n                    </small>\n                  </div>\n                  <button\n                    onClick={() => deleteZone(zone.id)}\n                    style={{\n                      background: '#FF4757',\n                      border: 'none',\n                      borderRadius: '4px',\n                      padding: '4px 8px',\n                      color: 'white',\n                      cursor: 'pointer',\n                      fontSize: '12px'\n                    }}\n                  >\n                    🗑️ Delete\n                  </button>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n} // Missing closing brace added\n}; // Main component closing brace\n\nexport default ROIZoneManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}