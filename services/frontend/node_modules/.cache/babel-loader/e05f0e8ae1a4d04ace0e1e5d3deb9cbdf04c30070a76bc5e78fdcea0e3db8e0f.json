{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayoub\\\\OneDrive\\\\Desktop\\\\eagleAI\\\\pizza_store_detection\\\\services\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\MainDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport VideoProcessor from '../VideoProcessor';\nimport StatsSidebar from './StatsSidebar';\nimport AlertsPanel from './AlertsPanel';\nimport ROIConfigModal from './ROIConfigModal';\nimport realTimeDataService from '../../services/RealTimeDataService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainDashboard = () => {\n  _s();\n  const [systemData, setSystemData] = useState({\n    violations: 0,\n    complianceRate: 0,\n    activeWorkers: 0,\n    totalInteractions: 0,\n    workers: [],\n    alerts: []\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [connectionStatus, setConnectionStatus] = useState('connecting');\n  const [selectedCamera, setSelectedCamera] = useState('camera_1');\n  const [detectionSensitivity, setDetectionSensitivity] = useState(true);\n  const [autoRecording, setAutoRecording] = useState(true);\n  const [cameras, setCameras] = useState([]);\n  const [showROIModal, setShowROIModal] = useState(false);\n  const [currentSession, setCurrentSession] = useState(null);\n  const [realTimeDetections, setRealTimeDetections] = useState([]);\n  const [realTimeViolations, setRealTimeViolations] = useState([]);\n\n  // Subscribe to real-time data updates\n  useEffect(() => {\n    console.log('ðŸ”„ Setting up real-time data subscriptions...');\n    setConnectionStatus('connecting');\n\n    // Subscribe to system health updates\n    const unsubscribeHealth = realTimeDataService.subscribe('systemHealth', health => {\n      setConnectionStatus(health.overall_status === 'healthy' ? 'connected' : 'degraded');\n      setIsLoading(false);\n    });\n\n    // Subscribe to statistics updates\n    const unsubscribeStats = realTimeDataService.subscribe('statistics', stats => {\n      setSystemData(prev => ({\n        ...prev,\n        violations: stats.violations,\n        complianceRate: stats.complianceRate,\n        activeWorkers: stats.activeWorkers,\n        totalInteractions: stats.totalInteractions\n      }));\n      setIsLoading(false);\n    });\n\n    // Subscribe to workers updates\n    const unsubscribeWorkers = realTimeDataService.subscribe('workers', workers => {\n      setSystemData(prev => ({\n        ...prev,\n        workers\n      }));\n    });\n\n    // Subscribe to alerts updates\n    const unsubscribeAlerts = realTimeDataService.subscribe('alerts', alerts => {\n      setSystemData(prev => ({\n        ...prev,\n        alerts: Array.isArray(alerts) ? alerts : [alerts, ...prev.alerts.slice(0, 4)]\n      }));\n    });\n\n    // Load cameras\n    realTimeDataService.getCameras().then(setCameras);\n\n    // Cleanup subscriptions on unmount\n    return () => {\n      unsubscribeHealth();\n      unsubscribeStats();\n      unsubscribeWorkers();\n      unsubscribeAlerts();\n    };\n  }, []);\n  const handleCameraChange = cameraId => {\n    setSelectedCamera(cameraId);\n  };\n  const handleSensitivityToggle = async () => {\n    const success = await realTimeDataService.toggleDetectionSensitivity();\n    if (success) {\n      setDetectionSensitivity(!detectionSensitivity);\n    }\n  };\n  const handleRecordingToggle = async () => {\n    const success = await realTimeDataService.toggleAutoRecording();\n    if (success) {\n      setAutoRecording(!autoRecording);\n    }\n  };\n\n  // Video processing callbacks\n  const handleSessionUpdate = session => {\n    setCurrentSession(session);\n    console.log('ðŸ“Š Session updated:', session);\n  };\n  const handleDetectionUpdate = detections => {\n    setRealTimeDetections(detections);\n    // Update system data with real detection count\n    setSystemData(prev => ({\n      ...prev,\n      totalInteractions: prev.totalInteractions + detections.length\n    }));\n  };\n  const handleViolationUpdate = violations => {\n    setRealTimeViolations(violations);\n    // Update system data with real violation count\n    setSystemData(prev => ({\n      ...prev,\n      violations: prev.violations + violations.length,\n      alerts: [...violations.map(v => ({\n        id: `violation_${Date.now()}_${Math.random()}`,\n        type: 'violation',\n        title: 'Scooper violation detected',\n        description: v.description || 'Worker grabbed protein without scooper',\n        time: new Date().toLocaleTimeString('en-US', {\n          hour12: false\n        }),\n        severity: 'high'\n      })), ...prev.alerts.slice(0, 4)]\n    }));\n  };\n  const handleROIConfiguration = () => {\n    setShowROIModal(true);\n  };\n\n  // Loading screen\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-[calc(100vh-80px)]\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin w-12 h-12 border-4 border-primary border-t-transparent rounded-full mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold text-gray-900 mb-2\",\n          children: \"Loading Dashboard...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Connecting to backend services...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${connectionStatus === 'connected' ? 'bg-green-100 text-green-800' : connectionStatus === 'connecting' ? 'bg-yellow-100 text-yellow-800' : 'bg-red-100 text-red-800'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `w-2 h-2 rounded-full mr-2 ${connectionStatus === 'connected' ? 'bg-green-500' : connectionStatus === 'connecting' ? 'bg-yellow-500 animate-pulse' : 'bg-red-500'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), connectionStatus === 'connected' ? 'Connected' : connectionStatus === 'connecting' ? 'Connecting...' : 'Connection Issues']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-[calc(100vh-80px)]\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 p-6 pr-3\",\n      children: /*#__PURE__*/_jsxDEV(VideoProcessor, {\n        onSessionUpdate: handleSessionUpdate,\n        onDetectionUpdate: handleDetectionUpdate,\n        onViolationUpdate: handleViolationUpdate,\n        currentSession: currentSession\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-96 p-6 pl-3\",\n      children: /*#__PURE__*/_jsxDEV(StatsSidebar, {\n        statistics: {\n          violations: systemData.violations,\n          complianceRate: systemData.complianceRate,\n          activeWorkers: systemData.activeWorkers,\n          totalInteractions: systemData.totalInteractions\n        },\n        workers: systemData.workers,\n        detectionSensitivity: detectionSensitivity,\n        autoRecording: autoRecording,\n        onSensitivityToggle: handleSensitivityToggle,\n        onRecordingToggle: handleRecordingToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlertsPanel, {\n      alerts: systemData.alerts,\n      onViewAllAlerts: () => console.log('View all alerts')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ROIConfigModal, {\n      isOpen: showROIModal,\n      onClose: () => setShowROIModal(false),\n      selectedCamera: selectedCamera\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(MainDashboard, \"RPPXfXc94CxjHAU6eRjq2Oj5544=\");\n_c = MainDashboard;\nexport default MainDashboard;\nvar _c;\n$RefreshReg$(_c, \"MainDashboard\");","map":{"version":3,"names":["React","useState","useEffect","VideoProcessor","StatsSidebar","AlertsPanel","ROIConfigModal","realTimeDataService","jsxDEV","_jsxDEV","MainDashboard","_s","systemData","setSystemData","violations","complianceRate","activeWorkers","totalInteractions","workers","alerts","isLoading","setIsLoading","connectionStatus","setConnectionStatus","selectedCamera","setSelectedCamera","detectionSensitivity","setDetectionSensitivity","autoRecording","setAutoRecording","cameras","setCameras","showROIModal","setShowROIModal","currentSession","setCurrentSession","realTimeDetections","setRealTimeDetections","realTimeViolations","setRealTimeViolations","console","log","unsubscribeHealth","subscribe","health","overall_status","unsubscribeStats","stats","prev","unsubscribeWorkers","unsubscribeAlerts","Array","isArray","slice","getCameras","then","handleCameraChange","cameraId","handleSensitivityToggle","success","toggleDetectionSensitivity","handleRecordingToggle","toggleAutoRecording","handleSessionUpdate","session","handleDetectionUpdate","detections","length","handleViolationUpdate","map","v","id","Date","now","Math","random","type","title","description","time","toLocaleTimeString","hour12","severity","handleROIConfiguration","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSessionUpdate","onDetectionUpdate","onViolationUpdate","statistics","onSensitivityToggle","onRecordingToggle","onViewAllAlerts","isOpen","onClose","_c","$RefreshReg$"],"sources":["C:/Users/ayoub/OneDrive/Desktop/eagleAI/pizza_store_detection/services/frontend/src/components/Dashboard/MainDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport VideoProcessor from '../VideoProcessor';\nimport StatsSidebar from './StatsSidebar';\nimport AlertsPanel from './AlertsPanel';\nimport ROIConfigModal from './ROIConfigModal';\nimport realTimeDataService from '../../services/RealTimeDataService';\n\nconst MainDashboard = () => {\n  const [systemData, setSystemData] = useState({\n    violations: 0,\n    complianceRate: 0,\n    activeWorkers: 0,\n    totalInteractions: 0,\n    workers: [],\n    alerts: []\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [connectionStatus, setConnectionStatus] = useState('connecting');\n\n  const [selectedCamera, setSelectedCamera] = useState('camera_1');\n  const [detectionSensitivity, setDetectionSensitivity] = useState(true);\n  const [autoRecording, setAutoRecording] = useState(true);\n  const [cameras, setCameras] = useState([]);\n  const [showROIModal, setShowROIModal] = useState(false);\n  const [currentSession, setCurrentSession] = useState(null);\n  const [realTimeDetections, setRealTimeDetections] = useState([]);\n  const [realTimeViolations, setRealTimeViolations] = useState([]);\n\n  // Subscribe to real-time data updates\n  useEffect(() => {\n    console.log('ðŸ”„ Setting up real-time data subscriptions...');\n    setConnectionStatus('connecting');\n\n    // Subscribe to system health updates\n    const unsubscribeHealth = realTimeDataService.subscribe('systemHealth', (health) => {\n      setConnectionStatus(health.overall_status === 'healthy' ? 'connected' : 'degraded');\n      setIsLoading(false);\n    });\n\n    // Subscribe to statistics updates\n    const unsubscribeStats = realTimeDataService.subscribe('statistics', (stats) => {\n      setSystemData(prev => ({\n        ...prev,\n        violations: stats.violations,\n        complianceRate: stats.complianceRate,\n        activeWorkers: stats.activeWorkers,\n        totalInteractions: stats.totalInteractions\n      }));\n      setIsLoading(false);\n    });\n\n    // Subscribe to workers updates\n    const unsubscribeWorkers = realTimeDataService.subscribe('workers', (workers) => {\n      setSystemData(prev => ({\n        ...prev,\n        workers\n      }));\n    });\n\n    // Subscribe to alerts updates\n    const unsubscribeAlerts = realTimeDataService.subscribe('alerts', (alerts) => {\n      setSystemData(prev => ({\n        ...prev,\n        alerts: Array.isArray(alerts) ? alerts : [alerts, ...prev.alerts.slice(0, 4)]\n      }));\n    });\n\n    // Load cameras\n    realTimeDataService.getCameras().then(setCameras);\n\n    // Cleanup subscriptions on unmount\n    return () => {\n      unsubscribeHealth();\n      unsubscribeStats();\n      unsubscribeWorkers();\n      unsubscribeAlerts();\n    };\n  }, []);\n\n  const handleCameraChange = (cameraId) => {\n    setSelectedCamera(cameraId);\n  };\n\n  const handleSensitivityToggle = async () => {\n    const success = await realTimeDataService.toggleDetectionSensitivity();\n    if (success) {\n      setDetectionSensitivity(!detectionSensitivity);\n    }\n  };\n\n  const handleRecordingToggle = async () => {\n    const success = await realTimeDataService.toggleAutoRecording();\n    if (success) {\n      setAutoRecording(!autoRecording);\n    }\n  };\n\n  // Video processing callbacks\n  const handleSessionUpdate = (session) => {\n    setCurrentSession(session);\n    console.log('ðŸ“Š Session updated:', session);\n  };\n\n  const handleDetectionUpdate = (detections) => {\n    setRealTimeDetections(detections);\n    // Update system data with real detection count\n    setSystemData(prev => ({\n      ...prev,\n      totalInteractions: prev.totalInteractions + detections.length\n    }));\n  };\n\n  const handleViolationUpdate = (violations) => {\n    setRealTimeViolations(violations);\n    // Update system data with real violation count\n    setSystemData(prev => ({\n      ...prev,\n      violations: prev.violations + violations.length,\n      alerts: [...violations.map(v => ({\n        id: `violation_${Date.now()}_${Math.random()}`,\n        type: 'violation',\n        title: 'Scooper violation detected',\n        description: v.description || 'Worker grabbed protein without scooper',\n        time: new Date().toLocaleTimeString('en-US', { hour12: false }),\n        severity: 'high'\n      })), ...prev.alerts.slice(0, 4)]\n    }));\n  };\n\n  const handleROIConfiguration = () => {\n    setShowROIModal(true);\n  };\n\n  // Loading screen\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-[calc(100vh-80px)]\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin w-12 h-12 border-4 border-primary border-t-transparent rounded-full mx-auto mb-4\"></div>\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">Loading Dashboard...</h2>\n          <p className=\"text-gray-600\">Connecting to backend services...</p>\n          <div className=\"mt-4\">\n            <span className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${\n              connectionStatus === 'connected' ? 'bg-green-100 text-green-800' :\n              connectionStatus === 'connecting' ? 'bg-yellow-100 text-yellow-800' :\n              'bg-red-100 text-red-800'\n            }`}>\n              <div className={`w-2 h-2 rounded-full mr-2 ${\n                connectionStatus === 'connected' ? 'bg-green-500' :\n                connectionStatus === 'connecting' ? 'bg-yellow-500 animate-pulse' :\n                'bg-red-500'\n              }`}></div>\n              {connectionStatus === 'connected' ? 'Connected' :\n               connectionStatus === 'connecting' ? 'Connecting...' :\n               'Connection Issues'}\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex h-[calc(100vh-80px)]\">\n      {/* Main Video Processing Area */}\n      <div className=\"flex-1 p-6 pr-3\">\n        <VideoProcessor\n          onSessionUpdate={handleSessionUpdate}\n          onDetectionUpdate={handleDetectionUpdate}\n          onViolationUpdate={handleViolationUpdate}\n          currentSession={currentSession}\n        />\n      </div>\n\n      {/* Right Sidebar */}\n      <div className=\"w-96 p-6 pl-3\">\n        <StatsSidebar\n          statistics={{\n            violations: systemData.violations,\n            complianceRate: systemData.complianceRate,\n            activeWorkers: systemData.activeWorkers,\n            totalInteractions: systemData.totalInteractions\n          }}\n          workers={systemData.workers}\n          detectionSensitivity={detectionSensitivity}\n          autoRecording={autoRecording}\n          onSensitivityToggle={handleSensitivityToggle}\n          onRecordingToggle={handleRecordingToggle}\n        />\n      </div>\n\n      {/* Bottom Alerts Panel */}\n      <AlertsPanel\n        alerts={systemData.alerts}\n        onViewAllAlerts={() => console.log('View all alerts')}\n      />\n\n      {/* ROI Configuration Modal */}\n      <ROIConfigModal\n        isOpen={showROIModal}\n        onClose={() => setShowROIModal(false)}\n        selectedCamera={selectedCamera}\n      />\n    </div>\n  );\n};\n\nexport default MainDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}