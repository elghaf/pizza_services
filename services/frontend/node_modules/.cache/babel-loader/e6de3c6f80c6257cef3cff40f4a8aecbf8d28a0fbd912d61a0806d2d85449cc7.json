{"ast":null,"code":"var _s = $RefreshSig$();\n/**\n * useViolationDetection - Custom hook for violation detection logic\n * Manages violation state, analysis, and notifications\n */\n\nimport { useState, useRef, useCallback } from 'react';\nimport { toast } from 'react-toastify';\nimport { analyzeViolations, getViolationStats } from '../utils/ViolationAnalysis';\nimport { violationTypes } from '../ViolationTypes';\nexport const useViolationDetection = () => {\n  _s();\n  // Violation state\n  const [violations, setViolations] = useState([]);\n  const [violationHistory, setViolationHistory] = useState([]);\n  const [settings, setSettings] = useState({\n    enabled: true,\n    sensitivity: 0.7,\n    // Confidence threshold for violations\n    temporalWindow: 3,\n    // Seconds to track violations\n    movementThreshold: 20 // Pixels of movement to consider \"handling\"\n  });\n\n  // Hand tracking reference\n  const handTrackingRef = useRef(new Map());\n\n  /**\n   * Process detections and analyze for violations\n   * @param {Array} detections - Current frame detections\n   * @param {Array} zones - ROI zones configuration\n   * @param {Function} onViolationDetected - Callback for new violations\n   */\n  const processDetections = useCallback((detections, zones, onViolationDetected) => {\n    console.log('🚨 ViolationDetection processDetections:', {\n      enabled: settings.enabled,\n      detections: detections.length,\n      zones: zones.length\n    });\n    if (!settings.enabled || detections.length === 0 || zones.length === 0) {\n      console.log('⏸️ Violation analysis skipped:', {\n        enabled: settings.enabled,\n        hasDetections: detections.length > 0,\n        hasZones: zones.length > 0\n      });\n      setViolations([]);\n      return;\n    }\n    console.log('🔍 Starting violation analysis...');\n    const newViolations = analyzeViolations(detections, zones, settings, handTrackingRef);\n\n    // Update violations\n    if (newViolations.length > 0) {\n      setViolations(newViolations);\n      setViolationHistory(prev => [...prev, ...newViolations].slice(-50)); // Keep last 50\n\n      // Notify parent component and show toasts\n      newViolations.forEach(violation => {\n        if (onViolationDetected) {\n          onViolationDetected(violation);\n        }\n        showViolationNotification(violation);\n      });\n    } else {\n      setViolations([]);\n    }\n  }, [settings]);\n\n  /**\n   * Show violation notification\n   * @param {object} violation - Violation object\n   */\n  const showViolationNotification = useCallback(violation => {\n    const config = violationTypes[violation.type];\n    const toastOptions = {\n      position: \"top-center\",\n      autoClose: config.severity === 'high' ? 8000 : 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true\n    };\n    if (config.severity === 'high') {\n      toast.error(`${config.icon} ${config.title}`, toastOptions);\n    } else {\n      toast.warning(`${config.icon} ${config.title}`, toastOptions);\n    }\n  }, []);\n\n  /**\n   * Update detection settings\n   * @param {object} newSettings - New settings object\n   */\n  const updateSettings = useCallback(newSettings => {\n    setSettings(prev => ({\n      ...prev,\n      ...newSettings\n    }));\n  }, []);\n\n  /**\n   * Clear all violations\n   */\n  const clearViolations = useCallback(() => {\n    setViolations([]);\n    handTrackingRef.current.clear();\n  }, []);\n\n  /**\n   * Clear violation history\n   */\n  const clearViolationHistory = useCallback(() => {\n    setViolationHistory([]);\n  }, []);\n\n  /**\n   * Acknowledge a violation\n   * @param {string} violationId - Violation ID to acknowledge\n   * @param {string} acknowledgedBy - User who acknowledged the violation\n   */\n  const acknowledgeViolation = useCallback((violationId, acknowledgedBy) => {\n    setViolationHistory(prev => prev.map(violation => violation.id === violationId ? {\n      ...violation,\n      resolved: true,\n      acknowledgedBy,\n      acknowledgedAt: new Date().toISOString()\n    } : violation));\n\n    // Remove from active violations\n    setViolations(prev => prev.filter(v => v.id !== violationId));\n    toast.success('Violation acknowledged and resolved');\n  }, []);\n\n  /**\n   * Get violation statistics\n   * @returns {object} Violation statistics\n   */\n  const getStats = useCallback(() => {\n    const stats = getViolationStats(violationHistory);\n    return {\n      ...stats,\n      current: violations.length\n    };\n  }, [violations, violationHistory]);\n\n  /**\n   * Filter violations by criteria\n   * @param {object} criteria - Filter criteria\n   * @returns {Array} Filtered violations\n   */\n  const filterViolations = useCallback((criteria = {}) => {\n    let filtered = [...violationHistory];\n    if (criteria.severity) {\n      filtered = filtered.filter(v => v.severity === criteria.severity);\n    }\n    if (criteria.type) {\n      filtered = filtered.filter(v => v.type === criteria.type);\n    }\n    if (criteria.timeRange) {\n      const now = Date.now();\n      const timeLimit = now - criteria.timeRange * 1000;\n      filtered = filtered.filter(v => new Date(v.timestamp).getTime() >= timeLimit);\n    }\n    if (criteria.resolved !== undefined) {\n      filtered = filtered.filter(v => v.resolved === criteria.resolved);\n    }\n    return filtered;\n  }, [violationHistory]);\n\n  /**\n   * Export violation data\n   * @param {string} format - Export format ('json' or 'csv')\n   * @param {object} criteria - Filter criteria\n   * @returns {string} Exported data\n   */\n  const exportViolations = useCallback((format = 'json', criteria = {}) => {\n    const filtered = filterViolations(criteria);\n    if (format === 'csv') {\n      const headers = ['ID', 'Type', 'Severity', 'Timestamp', 'Confidence', 'Description', 'Resolved'];\n      const rows = filtered.map(v => [v.id, v.type, v.severity, v.timestamp, v.confidence, v.description, v.resolved]);\n      return [headers, ...rows].map(row => row.join(',')).join('\\n');\n    }\n    return JSON.stringify(filtered, null, 2);\n  }, [filterViolations]);\n\n  /**\n   * Get violation trends over time\n   * @param {number} days - Number of days to analyze (default: 7)\n   * @returns {Array} Trend data\n   */\n  const getViolationTrends = useCallback((days = 7) => {\n    const now = new Date();\n    const trends = [];\n    for (let i = days - 1; i >= 0; i--) {\n      const date = new Date(now);\n      date.setDate(date.getDate() - i);\n      date.setHours(0, 0, 0, 0);\n      const nextDate = new Date(date);\n      nextDate.setDate(nextDate.getDate() + 1);\n      const dayViolations = violationHistory.filter(v => {\n        const vDate = new Date(v.timestamp);\n        return vDate >= date && vDate < nextDate;\n      });\n      trends.push({\n        date: date.toISOString().split('T')[0],\n        total: dayViolations.length,\n        high: dayViolations.filter(v => v.severity === 'high').length,\n        medium: dayViolations.filter(v => v.severity === 'medium').length,\n        low: dayViolations.filter(v => v.severity === 'low').length\n      });\n    }\n    return trends;\n  }, [violationHistory]);\n\n  /**\n   * Reset hand tracking data\n   */\n  const resetHandTracking = useCallback(() => {\n    handTrackingRef.current.clear();\n  }, []);\n  return {\n    // State\n    violations,\n    violationHistory,\n    settings,\n    // Actions\n    processDetections,\n    updateSettings,\n    clearViolations,\n    clearViolationHistory,\n    acknowledgeViolation,\n    resetHandTracking,\n    // Computed\n    getStats,\n    filterViolations,\n    exportViolations,\n    getViolationTrends,\n    // Refs\n    handTrackingRef\n  };\n};\n_s(useViolationDetection, \"n4obPK1PpgirOutd145iSPGU3N0=\");","map":{"version":3,"names":["useState","useRef","useCallback","toast","analyzeViolations","getViolationStats","violationTypes","useViolationDetection","_s","violations","setViolations","violationHistory","setViolationHistory","settings","setSettings","enabled","sensitivity","temporalWindow","movementThreshold","handTrackingRef","Map","processDetections","detections","zones","onViolationDetected","console","log","length","hasDetections","hasZones","newViolations","prev","slice","forEach","violation","showViolationNotification","config","type","toastOptions","position","autoClose","severity","hideProgressBar","closeOnClick","pauseOnHover","draggable","error","icon","title","warning","updateSettings","newSettings","clearViolations","current","clear","clearViolationHistory","acknowledgeViolation","violationId","acknowledgedBy","map","id","resolved","acknowledgedAt","Date","toISOString","filter","v","success","getStats","stats","filterViolations","criteria","filtered","timeRange","now","timeLimit","timestamp","getTime","undefined","exportViolations","format","headers","rows","confidence","description","row","join","JSON","stringify","getViolationTrends","days","trends","i","date","setDate","getDate","setHours","nextDate","dayViolations","vDate","push","split","total","high","medium","low","resetHandTracking"],"sources":["C:/Users/ayoub/OneDrive/Desktop/eagleAI/pizza_store_detection/services/frontend/src/components/ViolationDetector/hooks/useViolationDetection.js"],"sourcesContent":["/**\n * useViolationDetection - Custom hook for violation detection logic\n * Manages violation state, analysis, and notifications\n */\n\nimport { useState, useRef, useCallback } from 'react';\nimport { toast } from 'react-toastify';\nimport { analyzeViolations, getViolationStats } from '../utils/ViolationAnalysis';\nimport { violationTypes } from '../ViolationTypes';\n\nexport const useViolationDetection = () => {\n  // Violation state\n  const [violations, setViolations] = useState([]);\n  const [violationHistory, setViolationHistory] = useState([]);\n  const [settings, setSettings] = useState({\n    enabled: true,\n    sensitivity: 0.7, // Confidence threshold for violations\n    temporalWindow: 3, // Seconds to track violations\n    movementThreshold: 20, // Pixels of movement to consider \"handling\"\n  });\n\n  // Hand tracking reference\n  const handTrackingRef = useRef(new Map());\n\n  /**\n   * Process detections and analyze for violations\n   * @param {Array} detections - Current frame detections\n   * @param {Array} zones - ROI zones configuration\n   * @param {Function} onViolationDetected - Callback for new violations\n   */\n  const processDetections = useCallback((detections, zones, onViolationDetected) => {\n    console.log('🚨 ViolationDetection processDetections:', {\n      enabled: settings.enabled,\n      detections: detections.length,\n      zones: zones.length\n    });\n\n    if (!settings.enabled || detections.length === 0 || zones.length === 0) {\n      console.log('⏸️ Violation analysis skipped:', {\n        enabled: settings.enabled,\n        hasDetections: detections.length > 0,\n        hasZones: zones.length > 0\n      });\n      setViolations([]);\n      return;\n    }\n\n    console.log('🔍 Starting violation analysis...');\n    const newViolations = analyzeViolations(detections, zones, settings, handTrackingRef);\n\n    // Update violations\n    if (newViolations.length > 0) {\n      setViolations(newViolations);\n      setViolationHistory(prev => [...prev, ...newViolations].slice(-50)); // Keep last 50\n      \n      // Notify parent component and show toasts\n      newViolations.forEach(violation => {\n        if (onViolationDetected) {\n          onViolationDetected(violation);\n        }\n        \n        showViolationNotification(violation);\n      });\n    } else {\n      setViolations([]);\n    }\n  }, [settings]);\n\n  /**\n   * Show violation notification\n   * @param {object} violation - Violation object\n   */\n  const showViolationNotification = useCallback((violation) => {\n    const config = violationTypes[violation.type];\n    \n    const toastOptions = {\n      position: \"top-center\",\n      autoClose: config.severity === 'high' ? 8000 : 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n    };\n\n    if (config.severity === 'high') {\n      toast.error(`${config.icon} ${config.title}`, toastOptions);\n    } else {\n      toast.warning(`${config.icon} ${config.title}`, toastOptions);\n    }\n  }, []);\n\n  /**\n   * Update detection settings\n   * @param {object} newSettings - New settings object\n   */\n  const updateSettings = useCallback((newSettings) => {\n    setSettings(prev => ({ ...prev, ...newSettings }));\n  }, []);\n\n  /**\n   * Clear all violations\n   */\n  const clearViolations = useCallback(() => {\n    setViolations([]);\n    handTrackingRef.current.clear();\n  }, []);\n\n  /**\n   * Clear violation history\n   */\n  const clearViolationHistory = useCallback(() => {\n    setViolationHistory([]);\n  }, []);\n\n  /**\n   * Acknowledge a violation\n   * @param {string} violationId - Violation ID to acknowledge\n   * @param {string} acknowledgedBy - User who acknowledged the violation\n   */\n  const acknowledgeViolation = useCallback((violationId, acknowledgedBy) => {\n    setViolationHistory(prev => \n      prev.map(violation => \n        violation.id === violationId \n          ? { \n              ...violation, \n              resolved: true, \n              acknowledgedBy, \n              acknowledgedAt: new Date().toISOString() \n            }\n          : violation\n      )\n    );\n\n    // Remove from active violations\n    setViolations(prev => prev.filter(v => v.id !== violationId));\n    \n    toast.success('Violation acknowledged and resolved');\n  }, []);\n\n  /**\n   * Get violation statistics\n   * @returns {object} Violation statistics\n   */\n  const getStats = useCallback(() => {\n    const stats = getViolationStats(violationHistory);\n    return {\n      ...stats,\n      current: violations.length\n    };\n  }, [violations, violationHistory]);\n\n  /**\n   * Filter violations by criteria\n   * @param {object} criteria - Filter criteria\n   * @returns {Array} Filtered violations\n   */\n  const filterViolations = useCallback((criteria = {}) => {\n    let filtered = [...violationHistory];\n\n    if (criteria.severity) {\n      filtered = filtered.filter(v => v.severity === criteria.severity);\n    }\n\n    if (criteria.type) {\n      filtered = filtered.filter(v => v.type === criteria.type);\n    }\n\n    if (criteria.timeRange) {\n      const now = Date.now();\n      const timeLimit = now - (criteria.timeRange * 1000);\n      filtered = filtered.filter(v => new Date(v.timestamp).getTime() >= timeLimit);\n    }\n\n    if (criteria.resolved !== undefined) {\n      filtered = filtered.filter(v => v.resolved === criteria.resolved);\n    }\n\n    return filtered;\n  }, [violationHistory]);\n\n  /**\n   * Export violation data\n   * @param {string} format - Export format ('json' or 'csv')\n   * @param {object} criteria - Filter criteria\n   * @returns {string} Exported data\n   */\n  const exportViolations = useCallback((format = 'json', criteria = {}) => {\n    const filtered = filterViolations(criteria);\n    \n    if (format === 'csv') {\n      const headers = ['ID', 'Type', 'Severity', 'Timestamp', 'Confidence', 'Description', 'Resolved'];\n      const rows = filtered.map(v => [\n        v.id,\n        v.type,\n        v.severity,\n        v.timestamp,\n        v.confidence,\n        v.description,\n        v.resolved\n      ]);\n      \n      return [headers, ...rows].map(row => row.join(',')).join('\\n');\n    }\n    \n    return JSON.stringify(filtered, null, 2);\n  }, [filterViolations]);\n\n  /**\n   * Get violation trends over time\n   * @param {number} days - Number of days to analyze (default: 7)\n   * @returns {Array} Trend data\n   */\n  const getViolationTrends = useCallback((days = 7) => {\n    const now = new Date();\n    const trends = [];\n\n    for (let i = days - 1; i >= 0; i--) {\n      const date = new Date(now);\n      date.setDate(date.getDate() - i);\n      date.setHours(0, 0, 0, 0);\n      \n      const nextDate = new Date(date);\n      nextDate.setDate(nextDate.getDate() + 1);\n\n      const dayViolations = violationHistory.filter(v => {\n        const vDate = new Date(v.timestamp);\n        return vDate >= date && vDate < nextDate;\n      });\n\n      trends.push({\n        date: date.toISOString().split('T')[0],\n        total: dayViolations.length,\n        high: dayViolations.filter(v => v.severity === 'high').length,\n        medium: dayViolations.filter(v => v.severity === 'medium').length,\n        low: dayViolations.filter(v => v.severity === 'low').length\n      });\n    }\n\n    return trends;\n  }, [violationHistory]);\n\n  /**\n   * Reset hand tracking data\n   */\n  const resetHandTracking = useCallback(() => {\n    handTrackingRef.current.clear();\n  }, []);\n\n  return {\n    // State\n    violations,\n    violationHistory,\n    settings,\n\n    // Actions\n    processDetections,\n    updateSettings,\n    clearViolations,\n    clearViolationHistory,\n    acknowledgeViolation,\n    resetHandTracking,\n\n    // Computed\n    getStats,\n    filterViolations,\n    exportViolations,\n    getViolationTrends,\n\n    // Refs\n    handTrackingRef\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}