{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayoub\\\\OneDrive\\\\Desktop\\\\eagleAI\\\\pizza_store_detection\\\\services\\\\frontend\\\\src\\\\components\\\\ROIZoneManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ROIZoneManager = ({\n  currentFrame,\n  onZonesUpdate,\n  existingZones = [],\n  isEnabled = true,\n  frameWidth = 640,\n  frameHeight = 480\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [zones, setZones] = useState(existingZones);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [currentZone, setCurrentZone] = useState(null);\n  const [selectedZoneType, setSelectedZoneType] = useState('sauce_area');\n  const [editingZone, setEditingZone] = useState(null);\n  const [showZones, setShowZones] = useState(true);\n\n  // Zone types with professional configuration\n  const zoneTypes = {\n    sauce_area: {\n      name: 'Sauce Area',\n      color: '#FF6B35',\n      fillColor: 'rgba(255, 107, 53, 0.2)',\n      requiresScooper: true,\n      icon: '🍅',\n      description: 'Sauce dispensing and handling area'\n    },\n    cheese_area: {\n      name: 'Cheese Area',\n      color: '#FFD23F',\n      fillColor: 'rgba(255, 210, 63, 0.2)',\n      requiresScooper: true,\n      icon: '🧀',\n      description: 'Cheese container and handling area'\n    },\n    meat_area: {\n      name: 'Meat/Protein Area',\n      color: '#FF4757',\n      fillColor: 'rgba(255, 71, 87, 0.2)',\n      requiresScooper: true,\n      icon: '🥓',\n      description: 'Meat and protein ingredient area'\n    },\n    vegetable_area: {\n      name: 'Vegetable Area',\n      color: '#2ED573',\n      fillColor: 'rgba(46, 213, 115, 0.2)',\n      requiresScooper: true,\n      icon: '🥬',\n      description: 'Vegetable and fresh ingredient area'\n    },\n    prep_surface: {\n      name: 'Prep Surface',\n      color: '#5352ED',\n      fillColor: 'rgba(83, 82, 237, 0.2)',\n      requiresScooper: false,\n      icon: '🍕',\n      description: 'Pizza preparation surface (no scooper required)'\n    },\n    cleaning_area: {\n      name: 'Cleaning Area',\n      color: '#00D2D3',\n      fillColor: 'rgba(0, 210, 211, 0.2)',\n      requiresScooper: false,\n      icon: '🧽',\n      description: 'Cleaning and sanitization area'\n    }\n  };\n  useEffect(() => {\n    if (onZonesUpdate) {\n      onZonesUpdate(zones);\n    }\n  }, [zones, onZonesUpdate]);\n  useEffect(() => {\n    drawZones();\n  }, [zones, currentFrame, showZones, frameWidth, frameHeight]);\n  const getCanvasCoordinates = event => {\n    const canvas = canvasRef.current;\n    if (!canvas) return {\n      x: 0,\n      y: 0\n    };\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n\n    // Get display coordinates\n    const displayCoords = {\n      x: (event.clientX - rect.left) * scaleX,\n      y: (event.clientY - rect.top) * scaleY\n    };\n\n    // Convert to natural frame coordinates for storage\n    const backgroundImg = document.getElementById('roi-background-image');\n    let naturalCoords = displayCoords;\n    if (backgroundImg) {\n      const naturalWidth = backgroundImg.naturalWidth || frameWidth;\n      const naturalHeight = backgroundImg.naturalHeight || frameHeight;\n      const displayWidth = canvas.width;\n      const displayHeight = canvas.height;\n      const naturalScaleX = naturalWidth / displayWidth;\n      const naturalScaleY = naturalHeight / displayHeight;\n      naturalCoords = {\n        x: displayCoords.x * naturalScaleX,\n        y: displayCoords.y * naturalScaleY\n      };\n    }\n    console.log('🖱️ Mouse coordinates:', {\n      client: {\n        x: event.clientX,\n        y: event.clientY\n      },\n      display: displayCoords,\n      natural: naturalCoords,\n      canvas: {\n        width: canvas.width,\n        height: canvas.height\n      },\n      frame: {\n        width: frameWidth,\n        height: frameHeight\n      }\n    });\n    return naturalCoords;\n  };\n  const handleMouseDown = event => {\n    if (!isEnabled) {\n      console.log('🚫 Drawing disabled');\n      return;\n    }\n    console.log('🖱️ Mouse down event triggered');\n    event.preventDefault();\n\n    // Get both natural and display coordinates\n    const naturalCoords = getCanvasCoordinates(event); // This returns natural coordinates\n\n    // Also get display coordinates for drawing preview\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    const displayCoords = {\n      x: (event.clientX - rect.left) * scaleX,\n      y: (event.clientY - rect.top) * scaleY\n    };\n\n    // Check if clicking on existing zone for editing (use natural coordinates)\n    const clickedZone = findZoneAtPoint(naturalCoords.x, naturalCoords.y);\n    if (clickedZone) {\n      console.log('✏️ Editing existing zone:', clickedZone.name);\n      setEditingZone(clickedZone);\n      return;\n    }\n\n    // Start drawing new zone with display coordinates for preview\n    console.log('🎨 Starting new zone drawing:', {\n      display: displayCoords,\n      natural: naturalCoords\n    });\n    setIsDrawing(true);\n    setCurrentZone({\n      id: `zone_${Date.now()}`,\n      type: selectedZoneType,\n      points: [displayCoords],\n      // Use display coordinates for preview\n      isComplete: false,\n      isPreview: true\n    });\n  };\n  const handleMouseMove = event => {\n    if (!isDrawing || !currentZone) return;\n    event.preventDefault();\n\n    // Get display coordinates for preview (don't convert to natural yet)\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    const displayCoords = {\n      x: (event.clientX - rect.left) * scaleX,\n      y: (event.clientY - rect.top) * scaleY\n    };\n\n    // Update current zone with display coordinates for preview\n    if (currentZone.points.length === 1) {\n      const updatedZone = {\n        ...currentZone,\n        points: [currentZone.points[0], displayCoords],\n        isPreview: true // Mark as preview\n      };\n      setCurrentZone(updatedZone);\n      console.log('🖱️ Mouse move - updating preview:', {\n        start: currentZone.points[0],\n        current: displayCoords\n      });\n      drawZones([...zones, updatedZone]);\n    }\n  };\n  const handleMouseUp = event => {\n    if (!isDrawing || !currentZone) return;\n    console.log('🖱️ Mouse up event triggered');\n    event.preventDefault();\n\n    // Get display coordinates for the end point\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n    const displayEndCoords = {\n      x: (event.clientX - rect.left) * scaleX,\n      y: (event.clientY - rect.top) * scaleY\n    };\n\n    // Convert both start and end points from display to natural coordinates for storage\n    const backgroundImg = document.getElementById('roi-background-image');\n    let naturalStartCoords = currentZone.points[0];\n    let naturalEndCoords = displayEndCoords;\n    if (backgroundImg) {\n      const naturalWidth = backgroundImg.naturalWidth || frameWidth;\n      const naturalHeight = backgroundImg.naturalHeight || frameHeight;\n      const displayWidth = canvas.width;\n      const displayHeight = canvas.height;\n      const naturalScaleX = naturalWidth / displayWidth;\n      const naturalScaleY = naturalHeight / displayHeight;\n      naturalStartCoords = {\n        x: currentZone.points[0].x * naturalScaleX,\n        y: currentZone.points[0].y * naturalScaleY\n      };\n      naturalEndCoords = {\n        x: displayEndCoords.x * naturalScaleX,\n        y: displayEndCoords.y * naturalScaleY\n      };\n    }\n\n    // Complete rectangle zone with natural coordinates\n    if (currentZone.points.length >= 1) {\n      const newZone = {\n        ...currentZone,\n        points: [naturalStartCoords, naturalEndCoords],\n        // Store in natural coordinates\n        isComplete: true,\n        isPreview: false,\n        name: `${zoneTypes[selectedZoneType].name} ${zones.length + 1}`,\n        requiresScooper: zoneTypes[selectedZoneType].requiresScooper\n      };\n      console.log('✅ Zone created:', {\n        display: {\n          start: currentZone.points[0],\n          end: displayEndCoords\n        },\n        natural: {\n          start: naturalStartCoords,\n          end: naturalEndCoords\n        },\n        zone: newZone\n      });\n      const newZones = [...zones, newZone];\n      setZones(newZones);\n      onZonesUpdate(newZones);\n      toast.success(`${zoneTypes[selectedZoneType].name} zone created!`);\n    }\n    setIsDrawing(false);\n    setCurrentZone(null);\n    drawZones(); // Redraw with the new zone\n  };\n  const findZoneAtPoint = (x, y) => {\n    // x, y are in natural coordinates, zones are stored in natural coordinates\n    return zones.find(zone => {\n      if (zone.points.length === 2) {\n        const [p1, p2] = zone.points;\n        const inZone = x >= Math.min(p1.x, p2.x) && x <= Math.max(p1.x, p2.x) && y >= Math.min(p1.y, p2.y) && y <= Math.max(p1.y, p2.y);\n        console.log(`🔍 Checking zone ${zone.name}:`, {\n          point: {\n            x,\n            y\n          },\n          zone: {\n            p1,\n            p2\n          },\n          inZone\n        });\n        return inZone;\n      }\n      return false;\n    });\n  };\n  const drawZones = (zonesToDraw = zones) => {\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      console.log('❌ No canvas reference');\n      return;\n    }\n    const ctx = canvas.getContext('2d');\n\n    // Get the background image to match its size\n    const backgroundImg = document.getElementById('roi-background-image');\n    let displayWidth, displayHeight, naturalWidth, naturalHeight;\n    if (backgroundImg) {\n      const rect = backgroundImg.getBoundingClientRect();\n      displayWidth = rect.width;\n      displayHeight = rect.height;\n      naturalWidth = backgroundImg.naturalWidth || frameWidth;\n      naturalHeight = backgroundImg.naturalHeight || frameHeight;\n      canvas.width = displayWidth;\n      canvas.height = displayHeight;\n      canvas.style.width = displayWidth + 'px';\n      canvas.style.height = displayHeight + 'px';\n    } else {\n      // Fallback to provided dimensions\n      displayWidth = frameWidth;\n      displayHeight = frameHeight;\n      naturalWidth = frameWidth;\n      naturalHeight = frameHeight;\n      canvas.width = displayWidth;\n      canvas.height = displayHeight;\n    }\n\n    // Calculate scaling factors from natural to display size\n    const scaleX = displayWidth / naturalWidth;\n    const scaleY = displayHeight / naturalHeight;\n    console.log('🎨 Drawing zones on canvas:', {\n      canvasSize: `${canvas.width}x${canvas.height}`,\n      frameSize: `${frameWidth}x${frameHeight}`,\n      naturalSize: `${naturalWidth}x${naturalHeight}`,\n      displaySize: `${displayWidth}x${displayHeight}`,\n      scale: `${scaleX.toFixed(3)}x${scaleY.toFixed(3)}`,\n      zones: zonesToDraw.length,\n      backgroundImg: !!backgroundImg\n    });\n\n    // Clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    if (!showZones) return;\n\n    // Draw each zone with proper coordinate scaling\n    zonesToDraw.forEach((zone, index) => {\n      if (zone.points.length >= 2) {\n        const zoneConfig = zoneTypes[zone.type];\n        const [p1, p2] = zone.points;\n\n        // All stored zones are in natural coordinates, so we always need to scale to display\n        // The only exception is the currentZone being drawn (which is in display coordinates)\n        let scaledP1, scaledP2;\n        const isPreviewZone = zone.isPreview === true;\n        if (isPreviewZone && isEnabled) {\n          // Preview zone being drawn - coordinates are already in display space\n          scaledP1 = p1;\n          scaledP2 = p2;\n          console.log(`🎨 Drawing preview for ${zone.name} (display coords):`, {\n            p1,\n            p2\n          });\n        } else {\n          // Stored zone - scale coordinates from natural to display space\n          scaledP1 = {\n            x: p1.x * scaleX,\n            y: p1.y * scaleY\n          };\n          scaledP2 = {\n            x: p2.x * scaleX,\n            y: p2.y * scaleY\n          };\n          console.log(`🎯 Stored zone ${zone.name} (natural->display):`, {\n            natural: {\n              p1,\n              p2\n            },\n            display: {\n              scaledP1,\n              scaledP2\n            }\n          });\n        }\n        const x = Math.min(scaledP1.x, scaledP2.x);\n        const y = Math.min(scaledP1.y, scaledP2.y);\n        const width = Math.abs(scaledP2.x - scaledP1.x);\n        const height = Math.abs(scaledP2.y - scaledP1.y);\n        console.log(`🎯 Drawing zone ${zone.name}:`, {\n          original: `(${p1.x}, ${p1.y}) -> (${p2.x}, ${p2.y})`,\n          scaled: `(${scaledP1.x.toFixed(1)}, ${scaledP1.y.toFixed(1)}) -> (${scaledP2.x.toFixed(1)}, ${scaledP2.y.toFixed(1)})`,\n          final: `${x.toFixed(1)}, ${y.toFixed(1)}, ${width.toFixed(1)}x${height.toFixed(1)}`,\n          isEnabled,\n          scale: `${scaleX.toFixed(3)}x${scaleY.toFixed(3)}`\n        });\n\n        // Draw filled rectangle\n        ctx.fillStyle = zoneConfig.fillColor;\n        ctx.fillRect(x, y, width, height);\n\n        // Draw border\n        ctx.strokeStyle = zoneConfig.color;\n        ctx.lineWidth = (editingZone === null || editingZone === void 0 ? void 0 : editingZone.id) === zone.id ? 4 : 2;\n        ctx.setLineDash((editingZone === null || editingZone === void 0 ? void 0 : editingZone.id) === zone.id ? [5, 5] : []);\n        ctx.strokeRect(x, y, width, height);\n\n        // Draw label\n        const labelX = x + 5;\n        const labelY = y + 20;\n        ctx.fillStyle = zoneConfig.color;\n        ctx.font = 'bold 14px Arial';\n        ctx.fillText(`${zoneConfig.icon} ${zone.name}`, labelX, labelY);\n\n        // Draw scooper requirement indicator\n        const reqText = zone.requiresScooper ? '🥄 Required' : '🚫 Not Required';\n        ctx.font = '12px Arial';\n        ctx.fillStyle = zone.requiresScooper ? '#FF4757' : '#2ED573';\n        ctx.fillText(reqText, labelX, labelY + 18);\n      }\n    });\n\n    // Draw current zone being drawn\n    if (currentZone && currentZone.points.length === 2) {\n      const zoneConfig = zoneTypes[currentZone.type];\n      const [p1, p2] = currentZone.points;\n      ctx.strokeStyle = zoneConfig.color;\n      ctx.lineWidth = 3;\n      ctx.setLineDash([10, 5]);\n      ctx.strokeRect(Math.min(p1.x, p2.x), Math.min(p1.y, p2.y), Math.abs(p2.x - p1.x), Math.abs(p2.y - p1.y));\n    }\n  };\n  const deleteZone = zoneId => {\n    setZones(zones.filter(zone => zone.id !== zoneId));\n    setEditingZone(null);\n    toast.info('Zone deleted');\n  };\n  const clearAllZones = () => {\n    setZones([]);\n    setEditingZone(null);\n    toast.info('All zones cleared');\n  };\n  const exportZones = () => {\n    const exportData = {\n      zones: zones.map(zone => ({\n        ...zone,\n        // Convert to relative coordinates (0-1)\n        points: zone.points.map(p => ({\n          x: p.x / frameWidth,\n          y: p.y / frameHeight\n        }))\n      })),\n      frameSize: {\n        width: frameWidth,\n        height: frameHeight\n      },\n      exportedAt: new Date().toISOString()\n    };\n    const blob = new Blob([JSON.stringify(exportData, null, 2)], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `roi_zones_${Date.now()}.json`;\n    a.click();\n    URL.revokeObjectURL(url);\n    toast.success('Zones exported successfully!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%'\n    },\n    children: [isEnabled && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '16px',\n        padding: '16px',\n        background: 'rgba(255,255,255,0.1)',\n        borderRadius: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          margin: '0 0 12px 0',\n          color: '#fff'\n        },\n        children: \"\\uD83C\\uDFAF ROI Zone Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '12px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '6px',\n            fontWeight: 'bold'\n          },\n          children: \"Zone Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedZoneType,\n          onChange: e => setSelectedZoneType(e.target.value),\n          style: {\n            padding: '8px',\n            borderRadius: '6px',\n            border: '1px solid rgba(255,255,255,0.3)',\n            background: 'rgba(255,255,255,0.1)',\n            color: 'white',\n            width: '200px'\n          },\n          children: Object.entries(zoneTypes).map(([key, config]) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: key,\n            style: {\n              background: '#333',\n              color: 'white'\n            },\n            children: [config.icon, \" \", config.name]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '8px 12px',\n          background: isEnabled ? 'rgba(0,255,136,0.2)' : 'rgba(255,255,255,0.1)',\n          borderRadius: '6px',\n          marginBottom: '12px',\n          border: `2px solid ${isEnabled ? '#00FF88' : 'rgba(255,255,255,0.3)'}`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: isEnabled ? '#00FF88' : '#fff'\n          },\n          children: isEnabled ? '🎯 Drawing Mode: ACTIVE - Click and drag to create zones' : '🔒 Drawing Mode: DISABLED'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '12px',\n            marginTop: '4px',\n            opacity: 0.8\n          },\n          children: [\"Debug: isEnabled=\", isEnabled.toString(), \", currentFrame=\", !!currentFrame ? 'available' : 'none', \", frameSize=\", frameWidth, \"x\", frameHeight]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '8px',\n          flexWrap: 'wrap',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => setShowZones(!showZones),\n          children: showZones ? '👁️ Hide Zones' : '👁️‍🗨️ Show Zones'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: clearAllZones,\n          disabled: zones.length === 0,\n          children: \"\\uD83D\\uDDD1\\uFE0F Clear All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: exportZones,\n          disabled: zones.length === 0,\n          children: \"\\uD83D\\uDCE5 Export Zones\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-info\",\n          onClick: () => {\n            // Add a test zone to verify functionality\n            const testZone = {\n              id: `test_zone_${Date.now()}`,\n              type: selectedZoneType,\n              points: [{\n                x: 50,\n                y: 50\n              }, {\n                x: 200,\n                y: 150\n              }],\n              isComplete: true,\n              name: `Test ${zoneTypes[selectedZoneType].name}`,\n              requiresScooper: zoneTypes[selectedZoneType].requiresScooper\n            };\n            setZones([...zones, testZone]);\n            toast.success('Test zone added!');\n          },\n          children: \"\\uD83E\\uDDEA Add Test Zone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginLeft: '16px',\n            fontSize: '14px',\n            opacity: 0.8\n          },\n          children: [\"Zones: \", zones.length, \" | \", isEnabled ? 'Click and drag to create zones' : 'Enable drawing to create zones']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 9\n      }, this), isEnabled && zones.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '12px',\n          background: 'rgba(255,210,63,0.2)',\n          borderRadius: '6px',\n          marginTop: '8px',\n          border: '2px dashed #FFD23F'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: '#FFD23F',\n            fontWeight: 'bold',\n            marginBottom: '4px'\n          },\n          children: \"\\uD83D\\uDCDD How to Draw Zones:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '14px',\n            opacity: 0.9\n          },\n          children: [\"1. Select zone type above (e.g., \\\"\\uD83C\\uDF45 Sauce Area\\\")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 64\n          }, this), \"2. Click and hold on the video to start drawing\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 62\n          }, this), \"3. Drag to create a rectangle\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 44\n          }, this), \"4. Release to complete the zone\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 11\n      }, this), isDrawing && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '8px 12px',\n          background: 'rgba(0,212,255,0.3)',\n          borderRadius: '6px',\n          marginTop: '8px',\n          textAlign: 'center',\n          border: '2px solid #00D4FF'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#00D4FF',\n            fontWeight: 'bold'\n          },\n          children: \"\\uD83C\\uDFA8 Drawing in progress... Drag to set zone size\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        display: 'inline-block',\n        width: '100%',\n        maxWidth: '100%',\n        background: '#000',\n        borderRadius: '8px',\n        overflow: 'hidden'\n      },\n      children: [currentFrame && /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"roi-background-image\",\n        src: `data:image/jpeg;base64,${currentFrame}`,\n        alt: \"Video frame for zone configuration\",\n        style: {\n          width: '100%',\n          height: 'auto',\n          display: 'block',\n          borderRadius: '8px'\n        },\n        onLoad: e => {\n          console.log('🎯 ROI Manager: Video frame loaded');\n          const img = e.target;\n          const rect = img.getBoundingClientRect();\n          console.log('📐 Image dimensions:', {\n            natural: `${img.naturalWidth}x${img.naturalHeight}`,\n            display: `${rect.width}x${rect.height}`\n          });\n\n          // Update canvas size to match image\n          const canvas = canvasRef.current;\n          if (canvas) {\n            canvas.width = rect.width;\n            canvas.height = rect.height;\n            canvas.style.width = rect.width + 'px';\n            canvas.style.height = rect.height + 'px';\n            console.log('🎨 Canvas resized to match image');\n          }\n          setTimeout(() => drawZones(), 100);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          cursor: isEnabled ? 'crosshair' : 'default',\n          pointerEvents: isEnabled ? 'auto' : 'none',\n          zIndex: 20,\n          borderRadius: '8px'\n        },\n        onMouseDown: handleMouseDown,\n        onMouseMove: handleMouseMove,\n        onMouseUp: handleMouseUp,\n        onContextMenu: e => e.preventDefault()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 9\n      }, this), !currentFrame && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          height: '300px',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          background: 'rgba(255,255,255,0.1)',\n          color: 'rgba(255,255,255,0.6)'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '48px',\n              marginBottom: '16px'\n            },\n            children: \"\\uD83C\\uDFA5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Video frame will appear here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 7\n    }, this), isEnabled && zones.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '16px',\n        padding: '16px',\n        background: 'rgba(255,255,255,0.05)',\n        borderRadius: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          margin: '0 0 12px 0'\n        },\n        children: [\"\\uD83D\\uDCCB Active Zones (\", zones.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          maxHeight: '200px',\n          overflowY: 'auto'\n        },\n        children: zones.map((zone, index) => {\n          const config = zoneTypes[zone.type];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              padding: '8px 12px',\n              marginBottom: '8px',\n              background: (editingZone === null || editingZone === void 0 ? void 0 : editingZone.id) === zone.id ? 'rgba(255,255,255,0.2)' : 'rgba(255,255,255,0.1)',\n              borderRadius: '6px',\n              border: `2px solid ${config.color}`\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [config.icon, \" \", zone.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 729,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 730,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                style: {\n                  opacity: 0.8\n                },\n                children: [config.description, \" | Scooper: \", zone.requiresScooper ? '🥄 Required' : '🚫 Not Required']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 731,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteZone(zone.id),\n              style: {\n                background: '#FF4757',\n                border: 'none',\n                borderRadius: '4px',\n                padding: '4px 8px',\n                color: 'white',\n                cursor: 'pointer',\n                fontSize: '12px'\n              },\n              children: \"\\uD83D\\uDDD1\\uFE0F Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 735,\n              columnNumber: 19\n            }, this)]\n          }, zone.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 715,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 477,\n    columnNumber: 5\n  }, this);\n};\n_s(ROIZoneManager, \"eODZid7TnYHQgTNx3sN1CQJsJVc=\");\n_c = ROIZoneManager;\nexport default ROIZoneManager;\nvar _c;\n$RefreshReg$(_c, \"ROIZoneManager\");","map":{"version":3,"names":["React","useState","useRef","useEffect","toast","jsxDEV","_jsxDEV","ROIZoneManager","currentFrame","onZonesUpdate","existingZones","isEnabled","frameWidth","frameHeight","_s","canvasRef","zones","setZones","isDrawing","setIsDrawing","currentZone","setCurrentZone","selectedZoneType","setSelectedZoneType","editingZone","setEditingZone","showZones","setShowZones","zoneTypes","sauce_area","name","color","fillColor","requiresScooper","icon","description","cheese_area","meat_area","vegetable_area","prep_surface","cleaning_area","drawZones","getCanvasCoordinates","event","canvas","current","x","y","rect","getBoundingClientRect","scaleX","width","scaleY","height","displayCoords","clientX","left","clientY","top","backgroundImg","document","getElementById","naturalCoords","naturalWidth","naturalHeight","displayWidth","displayHeight","naturalScaleX","naturalScaleY","console","log","client","display","natural","frame","handleMouseDown","preventDefault","clickedZone","findZoneAtPoint","id","Date","now","type","points","isComplete","isPreview","handleMouseMove","length","updatedZone","start","handleMouseUp","displayEndCoords","naturalStartCoords","naturalEndCoords","newZone","end","zone","newZones","success","find","p1","p2","inZone","Math","min","max","point","zonesToDraw","ctx","getContext","style","canvasSize","frameSize","naturalSize","displaySize","scale","toFixed","clearRect","forEach","index","zoneConfig","scaledP1","scaledP2","isPreviewZone","abs","original","scaled","final","fillStyle","fillRect","strokeStyle","lineWidth","setLineDash","strokeRect","labelX","labelY","font","fillText","reqText","deleteZone","zoneId","filter","info","clearAllZones","exportZones","exportData","map","p","exportedAt","toISOString","blob","Blob","JSON","stringify","url","URL","createObjectURL","a","createElement","href","download","click","revokeObjectURL","children","marginBottom","padding","background","borderRadius","margin","fileName","_jsxFileName","lineNumber","columnNumber","fontWeight","value","onChange","e","target","border","Object","entries","key","config","fontSize","marginTop","opacity","toString","gap","flexWrap","alignItems","className","onClick","disabled","testZone","marginLeft","textAlign","position","maxWidth","overflow","src","alt","onLoad","img","setTimeout","ref","cursor","pointerEvents","zIndex","onMouseDown","onMouseMove","onMouseUp","onContextMenu","justifyContent","maxHeight","overflowY","_c","$RefreshReg$"],"sources":["C:/Users/ayoub/OneDrive/Desktop/eagleAI/pizza_store_detection/services/frontend/src/components/ROIZoneManager.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\n\nconst ROIZoneManager = ({ \n  currentFrame, \n  onZonesUpdate, \n  existingZones = [], \n  isEnabled = true,\n  frameWidth = 640,\n  frameHeight = 480 \n}) => {\n  const canvasRef = useRef(null);\n  const [zones, setZones] = useState(existingZones);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [currentZone, setCurrentZone] = useState(null);\n  const [selectedZoneType, setSelectedZoneType] = useState('sauce_area');\n  const [editingZone, setEditingZone] = useState(null);\n  const [showZones, setShowZones] = useState(true);\n\n  // Zone types with professional configuration\n  const zoneTypes = {\n    sauce_area: {\n      name: 'Sauce Area',\n      color: '#FF6B35',\n      fillColor: 'rgba(255, 107, 53, 0.2)',\n      requiresScooper: true,\n      icon: '🍅',\n      description: 'Sauce dispensing and handling area'\n    },\n    cheese_area: {\n      name: 'Cheese Area', \n      color: '#FFD23F',\n      fillColor: 'rgba(255, 210, 63, 0.2)',\n      requiresScooper: true,\n      icon: '🧀',\n      description: 'Cheese container and handling area'\n    },\n    meat_area: {\n      name: 'Meat/Protein Area',\n      color: '#FF4757',\n      fillColor: 'rgba(255, 71, 87, 0.2)',\n      requiresScooper: true,\n      icon: '🥓',\n      description: 'Meat and protein ingredient area'\n    },\n    vegetable_area: {\n      name: 'Vegetable Area',\n      color: '#2ED573',\n      fillColor: 'rgba(46, 213, 115, 0.2)',\n      requiresScooper: true,\n      icon: '🥬',\n      description: 'Vegetable and fresh ingredient area'\n    },\n    prep_surface: {\n      name: 'Prep Surface',\n      color: '#5352ED',\n      fillColor: 'rgba(83, 82, 237, 0.2)',\n      requiresScooper: false,\n      icon: '🍕',\n      description: 'Pizza preparation surface (no scooper required)'\n    },\n    cleaning_area: {\n      name: 'Cleaning Area',\n      color: '#00D2D3',\n      fillColor: 'rgba(0, 210, 211, 0.2)',\n      requiresScooper: false,\n      icon: '🧽',\n      description: 'Cleaning and sanitization area'\n    }\n  };\n\n  useEffect(() => {\n    if (onZonesUpdate) {\n      onZonesUpdate(zones);\n    }\n  }, [zones, onZonesUpdate]);\n\n  useEffect(() => {\n    drawZones();\n  }, [zones, currentFrame, showZones, frameWidth, frameHeight]);\n\n  const getCanvasCoordinates = (event) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return { x: 0, y: 0 };\n\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n\n    // Get display coordinates\n    const displayCoords = {\n      x: (event.clientX - rect.left) * scaleX,\n      y: (event.clientY - rect.top) * scaleY\n    };\n\n    // Convert to natural frame coordinates for storage\n    const backgroundImg = document.getElementById('roi-background-image');\n    let naturalCoords = displayCoords;\n\n    if (backgroundImg) {\n      const naturalWidth = backgroundImg.naturalWidth || frameWidth;\n      const naturalHeight = backgroundImg.naturalHeight || frameHeight;\n      const displayWidth = canvas.width;\n      const displayHeight = canvas.height;\n\n      const naturalScaleX = naturalWidth / displayWidth;\n      const naturalScaleY = naturalHeight / displayHeight;\n\n      naturalCoords = {\n        x: displayCoords.x * naturalScaleX,\n        y: displayCoords.y * naturalScaleY\n      };\n    }\n\n    console.log('🖱️ Mouse coordinates:', {\n      client: { x: event.clientX, y: event.clientY },\n      display: displayCoords,\n      natural: naturalCoords,\n      canvas: { width: canvas.width, height: canvas.height },\n      frame: { width: frameWidth, height: frameHeight }\n    });\n\n    return naturalCoords;\n  };\n\n  const handleMouseDown = (event) => {\n    if (!isEnabled) {\n      console.log('🚫 Drawing disabled');\n      return;\n    }\n\n    console.log('🖱️ Mouse down event triggered');\n    event.preventDefault();\n\n    // Get both natural and display coordinates\n    const naturalCoords = getCanvasCoordinates(event); // This returns natural coordinates\n\n    // Also get display coordinates for drawing preview\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n\n    const displayCoords = {\n      x: (event.clientX - rect.left) * scaleX,\n      y: (event.clientY - rect.top) * scaleY\n    };\n\n    // Check if clicking on existing zone for editing (use natural coordinates)\n    const clickedZone = findZoneAtPoint(naturalCoords.x, naturalCoords.y);\n    if (clickedZone) {\n      console.log('✏️ Editing existing zone:', clickedZone.name);\n      setEditingZone(clickedZone);\n      return;\n    }\n\n    // Start drawing new zone with display coordinates for preview\n    console.log('🎨 Starting new zone drawing:', {\n      display: displayCoords,\n      natural: naturalCoords\n    });\n    setIsDrawing(true);\n    setCurrentZone({\n      id: `zone_${Date.now()}`,\n      type: selectedZoneType,\n      points: [displayCoords], // Use display coordinates for preview\n      isComplete: false,\n      isPreview: true\n    });\n  };\n\n  const handleMouseMove = (event) => {\n    if (!isDrawing || !currentZone) return;\n\n    event.preventDefault();\n\n    // Get display coordinates for preview (don't convert to natural yet)\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n\n    const displayCoords = {\n      x: (event.clientX - rect.left) * scaleX,\n      y: (event.clientY - rect.top) * scaleY\n    };\n\n    // Update current zone with display coordinates for preview\n    if (currentZone.points.length === 1) {\n      const updatedZone = {\n        ...currentZone,\n        points: [currentZone.points[0], displayCoords],\n        isPreview: true // Mark as preview\n      };\n      setCurrentZone(updatedZone);\n      console.log('🖱️ Mouse move - updating preview:', {\n        start: currentZone.points[0],\n        current: displayCoords\n      });\n      drawZones([...zones, updatedZone]);\n    }\n  };\n\n  const handleMouseUp = (event) => {\n    if (!isDrawing || !currentZone) return;\n\n    console.log('🖱️ Mouse up event triggered');\n    event.preventDefault();\n\n    // Get display coordinates for the end point\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n\n    const displayEndCoords = {\n      x: (event.clientX - rect.left) * scaleX,\n      y: (event.clientY - rect.top) * scaleY\n    };\n\n    // Convert both start and end points from display to natural coordinates for storage\n    const backgroundImg = document.getElementById('roi-background-image');\n    let naturalStartCoords = currentZone.points[0];\n    let naturalEndCoords = displayEndCoords;\n\n    if (backgroundImg) {\n      const naturalWidth = backgroundImg.naturalWidth || frameWidth;\n      const naturalHeight = backgroundImg.naturalHeight || frameHeight;\n      const displayWidth = canvas.width;\n      const displayHeight = canvas.height;\n\n      const naturalScaleX = naturalWidth / displayWidth;\n      const naturalScaleY = naturalHeight / displayHeight;\n\n      naturalStartCoords = {\n        x: currentZone.points[0].x * naturalScaleX,\n        y: currentZone.points[0].y * naturalScaleY\n      };\n\n      naturalEndCoords = {\n        x: displayEndCoords.x * naturalScaleX,\n        y: displayEndCoords.y * naturalScaleY\n      };\n    }\n\n    // Complete rectangle zone with natural coordinates\n    if (currentZone.points.length >= 1) {\n      const newZone = {\n        ...currentZone,\n        points: [naturalStartCoords, naturalEndCoords], // Store in natural coordinates\n        isComplete: true,\n        isPreview: false,\n        name: `${zoneTypes[selectedZoneType].name} ${zones.length + 1}`,\n        requiresScooper: zoneTypes[selectedZoneType].requiresScooper\n      };\n\n      console.log('✅ Zone created:', {\n        display: { start: currentZone.points[0], end: displayEndCoords },\n        natural: { start: naturalStartCoords, end: naturalEndCoords },\n        zone: newZone\n      });\n\n      const newZones = [...zones, newZone];\n      setZones(newZones);\n      onZonesUpdate(newZones);\n      toast.success(`${zoneTypes[selectedZoneType].name} zone created!`);\n    }\n\n    setIsDrawing(false);\n    setCurrentZone(null);\n    drawZones(); // Redraw with the new zone\n  };\n\n  const findZoneAtPoint = (x, y) => {\n    // x, y are in natural coordinates, zones are stored in natural coordinates\n    return zones.find(zone => {\n      if (zone.points.length === 2) {\n        const [p1, p2] = zone.points;\n        const inZone = x >= Math.min(p1.x, p2.x) && x <= Math.max(p1.x, p2.x) &&\n                      y >= Math.min(p1.y, p2.y) && y <= Math.max(p1.y, p2.y);\n\n        console.log(`🔍 Checking zone ${zone.name}:`, {\n          point: { x, y },\n          zone: { p1, p2 },\n          inZone\n        });\n\n        return inZone;\n      }\n      return false;\n    });\n  };\n\n  const drawZones = (zonesToDraw = zones) => {\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      console.log('❌ No canvas reference');\n      return;\n    }\n\n    const ctx = canvas.getContext('2d');\n\n    // Get the background image to match its size\n    const backgroundImg = document.getElementById('roi-background-image');\n    let displayWidth, displayHeight, naturalWidth, naturalHeight;\n\n    if (backgroundImg) {\n      const rect = backgroundImg.getBoundingClientRect();\n      displayWidth = rect.width;\n      displayHeight = rect.height;\n      naturalWidth = backgroundImg.naturalWidth || frameWidth;\n      naturalHeight = backgroundImg.naturalHeight || frameHeight;\n\n      canvas.width = displayWidth;\n      canvas.height = displayHeight;\n      canvas.style.width = displayWidth + 'px';\n      canvas.style.height = displayHeight + 'px';\n    } else {\n      // Fallback to provided dimensions\n      displayWidth = frameWidth;\n      displayHeight = frameHeight;\n      naturalWidth = frameWidth;\n      naturalHeight = frameHeight;\n      canvas.width = displayWidth;\n      canvas.height = displayHeight;\n    }\n\n    // Calculate scaling factors from natural to display size\n    const scaleX = displayWidth / naturalWidth;\n    const scaleY = displayHeight / naturalHeight;\n\n    console.log('🎨 Drawing zones on canvas:', {\n      canvasSize: `${canvas.width}x${canvas.height}`,\n      frameSize: `${frameWidth}x${frameHeight}`,\n      naturalSize: `${naturalWidth}x${naturalHeight}`,\n      displaySize: `${displayWidth}x${displayHeight}`,\n      scale: `${scaleX.toFixed(3)}x${scaleY.toFixed(3)}`,\n      zones: zonesToDraw.length,\n      backgroundImg: !!backgroundImg\n    });\n    \n    // Clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    \n    if (!showZones) return;\n\n    // Draw each zone with proper coordinate scaling\n    zonesToDraw.forEach((zone, index) => {\n      if (zone.points.length >= 2) {\n        const zoneConfig = zoneTypes[zone.type];\n        const [p1, p2] = zone.points;\n\n        // All stored zones are in natural coordinates, so we always need to scale to display\n        // The only exception is the currentZone being drawn (which is in display coordinates)\n        let scaledP1, scaledP2;\n\n        const isPreviewZone = zone.isPreview === true;\n\n        if (isPreviewZone && isEnabled) {\n          // Preview zone being drawn - coordinates are already in display space\n          scaledP1 = p1;\n          scaledP2 = p2;\n          console.log(`🎨 Drawing preview for ${zone.name} (display coords):`, { p1, p2 });\n        } else {\n          // Stored zone - scale coordinates from natural to display space\n          scaledP1 = {\n            x: p1.x * scaleX,\n            y: p1.y * scaleY\n          };\n          scaledP2 = {\n            x: p2.x * scaleX,\n            y: p2.y * scaleY\n          };\n          console.log(`🎯 Stored zone ${zone.name} (natural->display):`, {\n            natural: { p1, p2 },\n            display: { scaledP1, scaledP2 }\n          });\n        }\n\n        const x = Math.min(scaledP1.x, scaledP2.x);\n        const y = Math.min(scaledP1.y, scaledP2.y);\n        const width = Math.abs(scaledP2.x - scaledP1.x);\n        const height = Math.abs(scaledP2.y - scaledP1.y);\n\n        console.log(`🎯 Drawing zone ${zone.name}:`, {\n          original: `(${p1.x}, ${p1.y}) -> (${p2.x}, ${p2.y})`,\n          scaled: `(${scaledP1.x.toFixed(1)}, ${scaledP1.y.toFixed(1)}) -> (${scaledP2.x.toFixed(1)}, ${scaledP2.y.toFixed(1)})`,\n          final: `${x.toFixed(1)}, ${y.toFixed(1)}, ${width.toFixed(1)}x${height.toFixed(1)}`,\n          isEnabled,\n          scale: `${scaleX.toFixed(3)}x${scaleY.toFixed(3)}`\n        });\n\n        // Draw filled rectangle\n        ctx.fillStyle = zoneConfig.fillColor;\n        ctx.fillRect(x, y, width, height);\n\n        // Draw border\n        ctx.strokeStyle = zoneConfig.color;\n        ctx.lineWidth = editingZone?.id === zone.id ? 4 : 2;\n        ctx.setLineDash(editingZone?.id === zone.id ? [5, 5] : []);\n        ctx.strokeRect(x, y, width, height);\n\n        // Draw label\n        const labelX = x + 5;\n        const labelY = y + 20;\n\n        ctx.fillStyle = zoneConfig.color;\n        ctx.font = 'bold 14px Arial';\n        ctx.fillText(`${zoneConfig.icon} ${zone.name}`, labelX, labelY);\n\n        // Draw scooper requirement indicator\n        const reqText = zone.requiresScooper ? '🥄 Required' : '🚫 Not Required';\n        ctx.font = '12px Arial';\n        ctx.fillStyle = zone.requiresScooper ? '#FF4757' : '#2ED573';\n        ctx.fillText(reqText, labelX, labelY + 18);\n      }\n    });\n    \n    // Draw current zone being drawn\n    if (currentZone && currentZone.points.length === 2) {\n      const zoneConfig = zoneTypes[currentZone.type];\n      const [p1, p2] = currentZone.points;\n      \n      ctx.strokeStyle = zoneConfig.color;\n      ctx.lineWidth = 3;\n      ctx.setLineDash([10, 5]);\n      ctx.strokeRect(\n        Math.min(p1.x, p2.x),\n        Math.min(p1.y, p2.y),\n        Math.abs(p2.x - p1.x),\n        Math.abs(p2.y - p1.y)\n      );\n    }\n  };\n\n  const deleteZone = (zoneId) => {\n    setZones(zones.filter(zone => zone.id !== zoneId));\n    setEditingZone(null);\n    toast.info('Zone deleted');\n  };\n\n  const clearAllZones = () => {\n    setZones([]);\n    setEditingZone(null);\n    toast.info('All zones cleared');\n  };\n\n  const exportZones = () => {\n    const exportData = {\n      zones: zones.map(zone => ({\n        ...zone,\n        // Convert to relative coordinates (0-1)\n        points: zone.points.map(p => ({\n          x: p.x / frameWidth,\n          y: p.y / frameHeight\n        }))\n      })),\n      frameSize: { width: frameWidth, height: frameHeight },\n      exportedAt: new Date().toISOString()\n    };\n    \n    const blob = new Blob([JSON.stringify(exportData, null, 2)], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `roi_zones_${Date.now()}.json`;\n    a.click();\n    URL.revokeObjectURL(url);\n    \n    toast.success('Zones exported successfully!');\n  };\n\n  return (\n    <div style={{ width: '100%' }}>\n      {/* Zone Controls - Only show in editing mode */}\n      {isEnabled && (\n        <div style={{\n          marginBottom: '16px',\n          padding: '16px',\n          background: 'rgba(255,255,255,0.1)',\n          borderRadius: '8px'\n        }}>\n        <h4 style={{ margin: '0 0 12px 0', color: '#fff' }}>🎯 ROI Zone Manager</h4>\n        \n        {/* Zone Type Selector */}\n        <div style={{ marginBottom: '12px' }}>\n          <label style={{ display: 'block', marginBottom: '6px', fontWeight: 'bold' }}>\n            Zone Type:\n          </label>\n          <select\n            value={selectedZoneType}\n            onChange={(e) => setSelectedZoneType(e.target.value)}\n            style={{\n              padding: '8px',\n              borderRadius: '6px',\n              border: '1px solid rgba(255,255,255,0.3)',\n              background: 'rgba(255,255,255,0.1)',\n              color: 'white',\n              width: '200px'\n            }}\n          >\n            {Object.entries(zoneTypes).map(([key, config]) => (\n              <option key={key} value={key} style={{ background: '#333', color: 'white' }}>\n                {config.icon} {config.name}\n              </option>\n            ))}\n          </select>\n        </div>\n        \n        {/* Drawing Status */}\n        <div style={{\n          padding: '8px 12px',\n          background: isEnabled ? 'rgba(0,255,136,0.2)' : 'rgba(255,255,255,0.1)',\n          borderRadius: '6px',\n          marginBottom: '12px',\n          border: `2px solid ${isEnabled ? '#00FF88' : 'rgba(255,255,255,0.3)'}`\n        }}>\n          <span style={{ color: isEnabled ? '#00FF88' : '#fff' }}>\n            {isEnabled ? '🎯 Drawing Mode: ACTIVE - Click and drag to create zones' : '🔒 Drawing Mode: DISABLED'}\n          </span>\n          <div style={{ fontSize: '12px', marginTop: '4px', opacity: 0.8 }}>\n            Debug: isEnabled={isEnabled.toString()}, currentFrame={!!currentFrame ? 'available' : 'none'},\n            frameSize={frameWidth}x{frameHeight}\n          </div>\n        </div>\n\n        {/* Controls */}\n        <div style={{ display: 'flex', gap: '8px', flexWrap: 'wrap', alignItems: 'center' }}>\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => setShowZones(!showZones)}\n          >\n            {showZones ? '👁️ Hide Zones' : '👁️‍🗨️ Show Zones'}\n          </button>\n          \n          <button\n            className=\"btn btn-warning\"\n            onClick={clearAllZones}\n            disabled={zones.length === 0}\n          >\n            🗑️ Clear All\n          </button>\n          \n          <button\n            className=\"btn btn-success\"\n            onClick={exportZones}\n            disabled={zones.length === 0}\n          >\n            📥 Export Zones\n          </button>\n\n          <button\n            className=\"btn btn-info\"\n            onClick={() => {\n              // Add a test zone to verify functionality\n              const testZone = {\n                id: `test_zone_${Date.now()}`,\n                type: selectedZoneType,\n                points: [\n                  { x: 50, y: 50 },\n                  { x: 200, y: 150 }\n                ],\n                isComplete: true,\n                name: `Test ${zoneTypes[selectedZoneType].name}`,\n                requiresScooper: zoneTypes[selectedZoneType].requiresScooper\n              };\n              setZones([...zones, testZone]);\n              toast.success('Test zone added!');\n            }}\n          >\n            🧪 Add Test Zone\n          </button>\n          \n          <span style={{ marginLeft: '16px', fontSize: '14px', opacity: 0.8 }}>\n            Zones: {zones.length} | {isEnabled ? 'Click and drag to create zones' : 'Enable drawing to create zones'}\n          </span>\n        </div>\n\n        {/* Drawing Instructions */}\n        {isEnabled && zones.length === 0 && (\n          <div style={{\n            padding: '12px',\n            background: 'rgba(255,210,63,0.2)',\n            borderRadius: '6px',\n            marginTop: '8px',\n            border: '2px dashed #FFD23F'\n          }}>\n            <div style={{ color: '#FFD23F', fontWeight: 'bold', marginBottom: '4px' }}>\n              📝 How to Draw Zones:\n            </div>\n            <div style={{ fontSize: '14px', opacity: 0.9 }}>\n              1. Select zone type above (e.g., \"🍅 Sauce Area\")<br />\n              2. Click and hold on the video to start drawing<br />\n              3. Drag to create a rectangle<br />\n              4. Release to complete the zone\n            </div>\n          </div>\n        )}\n\n        {isDrawing && (\n          <div style={{\n            padding: '8px 12px',\n            background: 'rgba(0,212,255,0.3)',\n            borderRadius: '6px',\n            marginTop: '8px',\n            textAlign: 'center',\n            border: '2px solid #00D4FF'\n          }}>\n            <span style={{ color: '#00D4FF', fontWeight: 'bold' }}>\n              🎨 Drawing in progress... Drag to set zone size\n            </span>\n          </div>\n        )}\n        </div>\n      )}\n\n      {/* Video with zone drawing overlay */}\n      <div style={{\n        position: 'relative',\n        display: 'inline-block',\n        width: '100%',\n        maxWidth: '100%',\n        background: '#000',\n        borderRadius: '8px',\n        overflow: 'hidden'\n      }}>\n        {/* Background video frame */}\n        {currentFrame && (\n          <img\n            id=\"roi-background-image\"\n            src={`data:image/jpeg;base64,${currentFrame}`}\n            alt=\"Video frame for zone configuration\"\n            style={{\n              width: '100%',\n              height: 'auto',\n              display: 'block',\n              borderRadius: '8px'\n            }}\n            onLoad={(e) => {\n              console.log('🎯 ROI Manager: Video frame loaded');\n              const img = e.target;\n              const rect = img.getBoundingClientRect();\n              console.log('📐 Image dimensions:', {\n                natural: `${img.naturalWidth}x${img.naturalHeight}`,\n                display: `${rect.width}x${rect.height}`\n              });\n\n              // Update canvas size to match image\n              const canvas = canvasRef.current;\n              if (canvas) {\n                canvas.width = rect.width;\n                canvas.height = rect.height;\n                canvas.style.width = rect.width + 'px';\n                canvas.style.height = rect.height + 'px';\n                console.log('🎨 Canvas resized to match image');\n              }\n\n              setTimeout(() => drawZones(), 100);\n            }}\n          />\n        )}\n\n        {/* Zone drawing canvas overlay */}\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            cursor: isEnabled ? 'crosshair' : 'default',\n            pointerEvents: isEnabled ? 'auto' : 'none',\n            zIndex: 20,\n            borderRadius: '8px'\n          }}\n          onMouseDown={handleMouseDown}\n          onMouseMove={handleMouseMove}\n          onMouseUp={handleMouseUp}\n          onContextMenu={(e) => e.preventDefault()}\n        />\n\n        {!currentFrame && (\n          <div style={{\n            width: '100%',\n            height: '300px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            background: 'rgba(255,255,255,0.1)',\n            color: 'rgba(255,255,255,0.6)'\n          }}>\n            <div style={{ textAlign: 'center' }}>\n              <div style={{ fontSize: '48px', marginBottom: '16px' }}>🎥</div>\n              <p>Video frame will appear here</p>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Zone List - Only show in editing mode */}\n      {isEnabled && zones.length > 0 && (\n        <div style={{\n          marginTop: '16px',\n          padding: '16px',\n          background: 'rgba(255,255,255,0.05)',\n          borderRadius: '8px'\n        }}>\n          <h4 style={{ margin: '0 0 12px 0' }}>📋 Active Zones ({zones.length})</h4>\n          <div style={{ maxHeight: '200px', overflowY: 'auto' }}>\n            {zones.map((zone, index) => {\n              const config = zoneTypes[zone.type];\n              return (\n                <div\n                  key={zone.id}\n                  style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    padding: '8px 12px',\n                    marginBottom: '8px',\n                    background: editingZone?.id === zone.id ? 'rgba(255,255,255,0.2)' : 'rgba(255,255,255,0.1)',\n                    borderRadius: '6px',\n                    border: `2px solid ${config.color}`\n                  }}\n                >\n                  <div>\n                    <strong>{config.icon} {zone.name}</strong>\n                    <br />\n                    <small style={{ opacity: 0.8 }}>\n                      {config.description} | Scooper: {zone.requiresScooper ? '🥄 Required' : '🚫 Not Required'}\n                    </small>\n                  </div>\n                  <button\n                    onClick={() => deleteZone(zone.id)}\n                    style={{\n                      background: '#FF4757',\n                      border: 'none',\n                      borderRadius: '4px',\n                      padding: '4px 8px',\n                      color: 'white',\n                      cursor: 'pointer',\n                      fontSize: '12px'\n                    }}\n                  >\n                    🗑️ Delete\n                  </button>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ROIZoneManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}