{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayoub\\\\OneDrive\\\\Desktop\\\\eagleAI\\\\pizza_store_detection\\\\services\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Header from './components/Header';\nimport MainDashboard from './components/Dashboard/MainDashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [systemHealth, setSystemHealth] = useState({});\n\n  // Check system health on startup\n  useEffect(() => {\n    checkSystemHealth();\n    const interval = setInterval(checkSystemHealth, 30000); // Check every 30 seconds\n    return () => clearInterval(interval);\n  }, []);\n  const checkSystemHealth = async () => {\n    try {\n      // Try enhanced coordinator first\n      const response = await fetch('http://localhost:8009/health');\n      if (response.ok) {\n        const health = await response.json();\n        setSystemHealth(health);\n      } else {\n        // Fallback to basic health check\n        const fallbackResponse = await fetch('/health');\n        if (fallbackResponse.ok) {\n          const health = await fallbackResponse.json();\n          setSystemHealth(health);\n        }\n      }\n    } catch (error) {\n      console.error('Health check failed:', error);\n      setSystemHealth({\n        overall_status: 'unhealthy',\n        services: {}\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      systemHealth: systemHealth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainDashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      newestOnTop: false,\n      closeOnClick: true,\n      rtl: false,\n      pauseOnFocusLoss: true,\n      draggable: true,\n      pauseOnHover: true,\n      theme: \"light\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"71vCHTQ11xVw9sN8OKy+HS5VGeo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ToastContainer","Header","MainDashboard","jsxDEV","_jsxDEV","App","_s","systemHealth","setSystemHealth","checkSystemHealth","interval","setInterval","clearInterval","response","fetch","ok","health","json","fallbackResponse","error","console","overall_status","services","className","children","fileName","_jsxFileName","lineNumber","columnNumber","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","_c","$RefreshReg$"],"sources":["C:/Users/ayoub/OneDrive/Desktop/eagleAI/pizza_store_detection/services/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Header from './components/Header';\nimport MainDashboard from './components/Dashboard/MainDashboard';\n\nfunction App() {\n  const [systemHealth, setSystemHealth] = useState({});\n\n  // Check system health on startup\n  useEffect(() => {\n    checkSystemHealth();\n    const interval = setInterval(checkSystemHealth, 30000); // Check every 30 seconds\n    return () => clearInterval(interval);\n  }, []);\n\n  const checkSystemHealth = async () => {\n    try {\n      // Try enhanced coordinator first\n      const response = await fetch('http://localhost:8009/health');\n      if (response.ok) {\n        const health = await response.json();\n        setSystemHealth(health);\n      } else {\n        // Fallback to basic health check\n        const fallbackResponse = await fetch('/health');\n        if (fallbackResponse.ok) {\n          const health = await fallbackResponse.json();\n          setSystemHealth(health);\n        }\n      }\n    } catch (error) {\n      console.error('Health check failed:', error);\n      setSystemHealth({ overall_status: 'unhealthy', services: {} });\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header systemHealth={systemHealth} />\n      <MainDashboard />\n\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"light\"\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,OAAO,uCAAuC;AAE9C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,aAAa,MAAM,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEpD;EACAC,SAAS,CAAC,MAAM;IACdU,iBAAiB,CAAC,CAAC;IACnB,MAAMC,QAAQ,GAAGC,WAAW,CAACF,iBAAiB,EAAE,KAAK,CAAC,CAAC,CAAC;IACxD,OAAO,MAAMG,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMD,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF;MACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;MAC5D,IAAID,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMC,MAAM,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QACpCT,eAAe,CAACQ,MAAM,CAAC;MACzB,CAAC,MAAM;QACL;QACA,MAAME,gBAAgB,GAAG,MAAMJ,KAAK,CAAC,SAAS,CAAC;QAC/C,IAAII,gBAAgB,CAACH,EAAE,EAAE;UACvB,MAAMC,MAAM,GAAG,MAAME,gBAAgB,CAACD,IAAI,CAAC,CAAC;UAC5CT,eAAe,CAACQ,MAAM,CAAC;QACzB;MACF;IACF,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CX,eAAe,CAAC;QAAEa,cAAc,EAAE,WAAW;QAAEC,QAAQ,EAAE,CAAC;MAAE,CAAC,CAAC;IAChE;EACF,CAAC;EAED,oBACElB,OAAA;IAAKmB,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACtCpB,OAAA,CAACH,MAAM;MAACM,YAAY,EAAEA;IAAa;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtCxB,OAAA,CAACF,aAAa;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEjBxB,OAAA,CAACJ,cAAc;MACb6B,QAAQ,EAAC,WAAW;MACpBC,SAAS,EAAE,IAAK;MAChBC,eAAe,EAAE,KAAM;MACvBC,WAAW,EAAE,KAAM;MACnBC,YAAY;MACZC,GAAG,EAAE,KAAM;MACXC,gBAAgB;MAChBC,SAAS;MACTC,YAAY;MACZC,KAAK,EAAC;IAAO;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACtB,EAAA,CAlDQD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AAoDZ,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}